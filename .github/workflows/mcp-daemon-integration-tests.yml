name: MCP+Daemon Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync --dev

      - name: Start Docker Compose services
        run: |
          docker-compose -f docker/integration-tests/docker-compose.yml up -d
          sleep 15  # Wait for services to initialize

      - name: Run integration tests
        run: |
          python scripts/run_mcp_daemon_integration_tests.py --skip-docker --output-dir=./test-reports
        continue-on-error: false

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-reports
          path: test-reports/
          retention-days: 30

      - name: Upload JUnit XML
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: test-reports/junit-*.xml
          retention-days: 30

      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-reports/junit-*.xml
          check_name: "Integration Test Results"

      - name: Stop Docker Compose services
        if: always()
        run: |
          docker-compose -f docker/integration-tests/docker-compose.yml down

      - name: Comment PR with test results
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const reportPath = './test-reports/mcp-daemon-integration-test-report.json';

            if (fs.existsSync(reportPath)) {
              const report = JSON.parse(fs.readFileSync(reportPath, 'utf8'));

              const body = `## MCP+Daemon Integration Test Results

              **Summary:**
              - Total Suites: ${report.total_suites}
              - Suites Passed: ✅ ${report.suites_passed}
              - Suites Failed: ❌ ${report.suites_failed}
              - Total Tests: ${report.total_tests}
              - Tests Passed: ✅ ${report.tests_passed}
              - Tests Failed: ❌ ${report.tests_failed}

              **Status:** ${report.suites_failed === 0 ? '✅ All tests passed!' : '❌ Some tests failed'}

              <details>
              <summary>View detailed results</summary>

              ${Object.entries(report.suite_results).map(([key, result]) => `
              ### ${result.name}
              - Status: ${result.status === 'passed' ? '✅' : '❌'} ${result.status}
              - Duration: ${result.duration.toFixed(2)}s
              - Tests: ${result.tests_passed} passed, ${result.tests_failed} failed
              `).join('\n')}

              </details>`;

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: body
              });
            }
