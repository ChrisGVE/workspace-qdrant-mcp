[package]
name = "workspace-qdrant-ingestion-engine"
version = "0.2.0"
edition = "2021"
authors = ["Christian C. Berclaz <christian.berclaz@mac.com>"]
description = "High-performance Rust ingestion engine for workspace-qdrant-mcp"
license = "MIT"
repository = "https://github.com/ChrisGVE/workspace-qdrant-mcp"
readme = "README.md"
keywords = ["qdrant", "vector-database", "embeddings", "document-processing", "lsp"]
categories = ["text-processing", "database", "command-line-utilities"]

# Enable LTO for release builds
[profile.release]
lto = true
codegen-units = 1
panic = "abort"
strip = true

# Optimize for size in release
[profile.release-small]
inherits = "release"
opt-level = "s"

# Development profile with faster compilation
[profile.dev]
opt-level = 0
debug = true
split-debuginfo = "unpacked"

[workspace]
members = [
    ".",
    "python-bindings",
]

[dependencies]
# Async runtime and utilities
tokio = { version = "1.35", features = [
    "rt-multi-thread", "macros", "time", "fs", "process", "signal",
    "sync", "io-std", "io-util", "net", "parking_lot"
]}
tokio-util = { version = "0.7", features = ["codec", "time"] }
tokio-stream = "0.1"

# gRPC and networking
tonic = { version = "0.10", features = ["tls", "tls-roots", "compression"] }
prost = "0.12"
prost-types = "0.12"

# ML inference and embeddings
candle-core = { version = "0.6", optional = true }
candle-nn = { version = "0.6", optional = true }
candle-transformers = { version = "0.6", optional = true }
ort = { version = "1.16", optional = true, features = ["ndarray"] }
hf-hub = { version = "0.3", optional = true }
tokenizers = { version = "0.15", optional = true }

# Document processing
pdf = "0.8"
epub = "2.0"
zip = "0.6"
encoding_rs = "0.8"
chardet = "0.2"
mime_guess = "2.0"

# Code parsing and analysis
tree-sitter = { version = "0.20", features = ["wasm"] }
tree-sitter-rust = "0.20"
tree-sitter-python = "0.20"
tree-sitter-javascript = "0.20"
tree-sitter-typescript = "0.20"
tree-sitter-go = "0.20"
tree-sitter-c = "0.20"
tree-sitter-cpp = "0.20"
tree-sitter-java = "0.20"
tree-sitter-json = "0.20"
tree-sitter-yaml = "0.20"
tree-sitter-toml = "0.20"
tree-sitter-markdown = "0.0.1"

# LSP integration
tower-lsp = "0.20"
lsp-types = "0.94"

# File watching and system integration
notify = { version = "6.1", features = ["macos_fsevent"] }
walkdir = "2.4"
glob = "0.3"

# Search and indexing
tantivy = { version = "0.21", features = ["mmap"] }
lindera-tantivy = { version = "0.27", optional = true }  # Japanese text analysis
whatlang = "0.16"  # Language detection

# Vector database client
qdrant-client = { version = "1.7", features = ["tls"] }

# Serialization and configuration
serde = { version = "1.0", features = ["derive", "rc"] }
serde_json = "1.0"
serde_yaml = "0.9"
toml = "0.8"
config = "0.14"

# CLI and configuration
clap = { version = "4.4", features = ["derive", "env", "unicode"] }

# Utilities and data structures
uuid = { version = "1.6", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde", "clock"] }
url = { version = "2.5", features = ["serde"] }
bytes = "1.5"
dashmap = "5.5"
parking_lot = "0.12"
crossbeam = "0.8"
rayon = "1.8"
once_cell = "1.19"
regex = "1.10"
ahash = "0.8"

# Error handling and logging
thiserror = "1.0"
anyhow = "1.0"
tracing = { version = "0.1", features = ["log", "attributes", "std"] }
tracing-subscriber = { version = "0.3", features = ["env-filter", "json", "registry"] }
tracing-appender = "0.2"

# HTTP client for web scraping
reqwest = { version = "0.11", features = ["json", "stream"] }
scraper = "0.18"
html5ever = "0.26"

# Security and validation
ring = "0.17"  # Cryptographic functions
base64 = "0.21"

# Performance and profiling
criterion = { version = "0.5", optional = true }

# Python integration (optional for embedded deployment)
pyo3 = { version = "0.20", features = ["extension-module", "abi3"], optional = true }

[build-dependencies]
tonic-build = { version = "0.10", features = ["prost"] }
prost-build = "0.12"

[dev-dependencies]
tokio-test = "0.4"
temp_testdir = "0.2"
criterion = { version = "0.5", features = ["html_reports"] }
pretty_assertions = "1.4"
mockall = "0.12"

[features]
default = ["candle-ml", "local-embeddings", "web-scraping"]

# ML backend selection (mutually exclusive)
candle-ml = ["candle-core", "candle-nn", "candle-transformers", "hf-hub", "tokenizers"]
onnx-ml = ["ort"]

# Feature flags
local-embeddings = ["candle-ml"]
web-scraping = []
japanese-support = ["lindera-tantivy"]
python-bindings = ["pyo3"]
benchmarks = ["criterion"]

# Platform-specific optimizations
[target.'cfg(target_os = "macos")'.dependencies]
notify = { version = "6.1", features = ["macos_fsevent"] }

[target.'cfg(target_os = "linux")'.dependencies]
notify = { version = "6.1", features = ["inotify"] }

[target.'cfg(target_os = "windows")'.dependencies]
notify = { version = "6.1", features = ["windows"] }
winapi = { version = "0.3", features = ["winnt", "processthreadsapi"] }

# Benchmarking configuration
[[bench]]
name = "document_processing"
harness = false
required-features = ["benchmarks"]

[[bench]]
name = "embedding_generation"
harness = false
required-features = ["benchmarks", "local-embeddings"]

[[bench]]
name = "file_watching"
harness = false
required-features = ["benchmarks"]

# Binary targets
[[bin]]
name = "ingestion-engine"
path = "src/main.rs"
required-features = []

[[bin]]
name = "engine-cli"
path = "src/cli.rs"
required-features = []

# Library configuration
[lib]
name = "workspace_qdrant_ingestion_engine"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

# Examples
[[example]]
name = "basic_ingestion"
path = "examples/basic_ingestion.rs"

[[example]]
name = "lsp_integration"
path = "examples/lsp_integration.rs"

[[example]]
name = "file_watching"
path = "examples/file_watching.rs"

# Documentation configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]