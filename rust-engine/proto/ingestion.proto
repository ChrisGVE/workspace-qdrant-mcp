syntax = "proto3";

package workspace_qdrant.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";

// Unified ingestion service for document processing, file watching, search, and CLI operations
service IngestService {
  // Document processing operations
  rpc ProcessDocument(ProcessDocumentRequest) returns (ProcessDocumentResponse);
  rpc ProcessFolder(ProcessFolderRequest) returns (stream ProcessFolderProgress);
  
  // File watching operations
  rpc StartWatching(StartWatchingRequest) returns (stream WatchingUpdate);
  rpc StopWatching(StopWatchingRequest) returns (StopWatchingResponse);
  rpc ListWatches(ListWatchesRequest) returns (ListWatchesResponse);
  rpc ConfigureWatch(ConfigureWatchRequest) returns (ConfigureWatchResponse);
  
  // Search operations
  rpc ExecuteQuery(ExecuteQueryRequest) returns (ExecuteQueryResponse);
  rpc ListCollections(ListCollectionsRequest) returns (ListCollectionsResponse);
  rpc GetCollectionInfo(GetCollectionInfoRequest) returns (CollectionInfo);
  rpc CreateCollection(CreateCollectionRequest) returns (CreateCollectionResponse);
  rpc DeleteCollection(DeleteCollectionRequest) returns (DeleteCollectionResponse);
  
  // Document management
  rpc ListDocuments(ListDocumentsRequest) returns (ListDocumentsResponse);
  rpc GetDocument(GetDocumentRequest) returns (GetDocumentResponse);
  rpc DeleteDocument(DeleteDocumentRequest) returns (DeleteDocumentResponse);
  
  // Configuration management
  rpc LoadConfiguration(LoadConfigurationRequest) returns (LoadConfigurationResponse);
  rpc SaveConfiguration(SaveConfigurationRequest) returns (SaveConfigurationResponse);
  rpc ValidateConfiguration(ValidateConfigurationRequest) returns (ValidateConfigurationResponse);
  
  // Memory operations
  rpc AddMemoryRule(AddMemoryRuleRequest) returns (AddMemoryRuleResponse);
  rpc ListMemoryRules(ListMemoryRulesRequest) returns (ListMemoryRulesResponse);
  rpc DeleteMemoryRule(DeleteMemoryRuleRequest) returns (DeleteMemoryRuleResponse);
  rpc SearchMemoryRules(SearchMemoryRulesRequest) returns (SearchMemoryRulesResponse);
  
  // Status and monitoring
  rpc GetStats(GetStatsRequest) returns (GetStatsResponse);
  rpc GetProcessingStatus(GetProcessingStatusRequest) returns (ProcessingStatusResponse);
  rpc GetSystemStatus(google.protobuf.Empty) returns (SystemStatusResponse);
  rpc HealthCheck(google.protobuf.Empty) returns (HealthResponse);
  
  // Real-time status streaming
  rpc StreamProcessingStatus(StreamStatusRequest) returns (stream ProcessingStatusUpdate);
  rpc StreamSystemMetrics(StreamMetricsRequest) returns (stream SystemMetricsUpdate);
  rpc StreamQueueStatus(StreamQueueRequest) returns (stream QueueStatusUpdate);
}

// Document processing messages
message ProcessDocumentRequest {
  string file_path = 1;
  string collection = 2;
  map<string, string> metadata = 3;
  optional string document_id = 4;
  bool chunk_text = 5;
}

message ProcessDocumentResponse {
  bool success = 1;
  string message = 2;
  optional string document_id = 3;
  int32 chunks_added = 4;
  map<string, string> applied_metadata = 5;
}

// File watching messages
message StartWatchingRequest {
  string path = 1;
  string collection = 2;
  repeated string patterns = 3;
  repeated string ignore_patterns = 4;
  bool auto_ingest = 5;
  bool recursive = 6;
  int32 recursive_depth = 7;
  int32 debounce_seconds = 8;
  int32 update_frequency_ms = 9;
  optional string watch_id = 10;
}

message WatchingUpdate {
  string watch_id = 1;
  WatchEventType event_type = 2;
  string file_path = 3;
  google.protobuf.Timestamp timestamp = 4;
  optional string error_message = 5;
  WatchStatus status = 6;
}

message StopWatchingRequest {
  string watch_id = 1;
}

message StopWatchingResponse {
  bool success = 1;
  string message = 2;
}

// Query execution messages
message ExecuteQueryRequest {
  string query = 1;
  repeated string collections = 2;
  SearchMode mode = 3;
  int32 limit = 4;
  double score_threshold = 5;
}

message ExecuteQueryResponse {
  string query = 1;
  SearchMode mode = 2;
  repeated string collections_searched = 3;
  int32 total_results = 4;
  repeated SearchResult results = 5;
}

message SearchResult {
  string id = 1;
  double score = 2;
  map<string, google.protobuf.Any> payload = 3;
  string collection = 4;
  string search_type = 5;
}

// Statistics and health messages
message GetStatsRequest {
  bool include_collection_stats = 1;
  bool include_watch_stats = 2;
}

message GetStatsResponse {
  EngineStats engine_stats = 1;
  repeated CollectionStats collection_stats = 2;
  repeated WatchStats watch_stats = 3;
}

message EngineStats {
  google.protobuf.Timestamp started_at = 1;
  google.protobuf.Duration uptime = 2;
  int64 total_documents_processed = 3;
  int64 total_documents_indexed = 4;
  int32 active_watches = 5;
  string version = 6;
}

message CollectionStats {
  string name = 1;
  int64 document_count = 2;
  int64 total_size_bytes = 3;
  google.protobuf.Timestamp last_updated = 4;
}

message WatchStats {
  string watch_id = 1;
  string path = 2;
  string collection = 3;
  WatchStatus status = 4;
  int64 files_processed = 5;
  int64 files_failed = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp last_activity = 8;
}

message HealthResponse {
  HealthStatus status = 1;
  string message = 2;
  repeated ServiceHealth services = 3;
}

message ServiceHealth {
  string name = 1;
  HealthStatus status = 2;
  string message = 3;
}

// Enums
enum WatchEventType {
  WATCH_EVENT_TYPE_UNSPECIFIED = 0;
  WATCH_EVENT_TYPE_CREATED = 1;
  WATCH_EVENT_TYPE_MODIFIED = 2;
  WATCH_EVENT_TYPE_DELETED = 3;
  WATCH_EVENT_TYPE_ERROR = 4;
  WATCH_EVENT_TYPE_STARTED = 5;
  WATCH_EVENT_TYPE_STOPPED = 6;
}

enum WatchStatus {
  WATCH_STATUS_UNSPECIFIED = 0;
  WATCH_STATUS_ACTIVE = 1;
  WATCH_STATUS_PAUSED = 2;
  WATCH_STATUS_ERROR = 3;
  WATCH_STATUS_STOPPED = 4;
}

enum SearchMode {
  SEARCH_MODE_UNSPECIFIED = 0;
  SEARCH_MODE_HYBRID = 1;
  SEARCH_MODE_DENSE = 2;
  SEARCH_MODE_SPARSE = 3;
}

enum HealthStatus {
  HEALTH_STATUS_UNSPECIFIED = 0;
  HEALTH_STATUS_HEALTHY = 1;
  HEALTH_STATUS_DEGRADED = 2;
  HEALTH_STATUS_UNHEALTHY = 3;
}

// Folder processing messages
message ProcessFolderRequest {
  string folder_path = 1;
  string collection = 2;
  repeated string include_patterns = 3;
  repeated string ignore_patterns = 4;
  bool recursive = 5;
  int32 max_depth = 6;
  bool dry_run = 7;
  map<string, string> metadata = 8;
}

message ProcessFolderProgress {
  string current_file = 1;
  int32 files_processed = 2;
  int32 total_files = 3;
  int32 files_succeeded = 4;
  int32 files_failed = 5;
  repeated string failed_files = 6;
  bool completed = 7;
  string error_message = 8;
}

// Watch management messages
message ListWatchesRequest {
  bool active_only = 1;
}

message ListWatchesResponse {
  repeated WatchInfo watches = 1;
}

message WatchInfo {
  string watch_id = 1;
  string path = 2;
  string collection = 3;
  WatchStatus status = 4;
  repeated string patterns = 5;
  repeated string ignore_patterns = 6;
  bool auto_ingest = 7;
  bool recursive = 8;
  int32 recursive_depth = 9;
  google.protobuf.Timestamp created_at = 10;
  google.protobuf.Timestamp last_activity = 11;
  int64 files_processed = 12;
  int64 files_failed = 13;
}

message ConfigureWatchRequest {
  string watch_id = 1;
  optional WatchStatus status = 2;
  repeated string patterns = 3;
  repeated string ignore_patterns = 4;
  optional bool auto_ingest = 5;
  optional bool recursive = 6;
  optional int32 recursive_depth = 7;
  optional int32 debounce_seconds = 8;
}

message ConfigureWatchResponse {
  bool success = 1;
  string message = 2;
  WatchInfo updated_watch = 3;
}

// Collection management messages
message ListCollectionsRequest {
  bool include_stats = 1;
}

message ListCollectionsResponse {
  repeated CollectionInfo collections = 1;
}

message CollectionInfo {
  string name = 1;
  string description = 2;
  int64 document_count = 3;
  int64 total_size_bytes = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp last_updated = 6;
  map<string, string> metadata = 7;
}

message GetCollectionInfoRequest {
  string collection_name = 1;
  bool include_sample_documents = 2;
}

message CreateCollectionRequest {
  string collection_name = 1;
  string description = 2;
  map<string, string> metadata = 3;
}

message CreateCollectionResponse {
  bool success = 1;
  string message = 2;
  CollectionInfo collection_info = 3;
}

message DeleteCollectionRequest {
  string collection_name = 1;
  bool confirm = 2;
}

message DeleteCollectionResponse {
  bool success = 1;
  string message = 2;
  int64 documents_deleted = 3;
}

// Document management messages
message ListDocumentsRequest {
  string collection_name = 1;
  int32 limit = 2;
  int32 offset = 3;
  string filter_pattern = 4;
}

message ListDocumentsResponse {
  repeated DocumentInfo documents = 1;
  int32 total_count = 2;
  bool has_more = 3;
}

message DocumentInfo {
  string document_id = 1;
  string file_path = 2;
  string collection = 3;
  int64 file_size_bytes = 4;
  google.protobuf.Timestamp ingested_at = 5;
  google.protobuf.Timestamp modified_at = 6;
  map<string, string> metadata = 7;
  int32 chunk_count = 8;
}

message GetDocumentRequest {
  string document_id = 1;
  string collection_name = 2;
  bool include_content = 3;
}

message GetDocumentResponse {
  bool success = 1;
  string message = 2;
  DocumentInfo document_info = 3;
  string content = 4;
  repeated ChunkInfo chunks = 5;
}

message ChunkInfo {
  string chunk_id = 1;
  string content = 2;
  int32 start_offset = 3;
  int32 end_offset = 4;
  map<string, string> metadata = 5;
}

message DeleteDocumentRequest {
  string document_id = 1;
  string collection_name = 2;
}

message DeleteDocumentResponse {
  bool success = 1;
  string message = 2;
  int32 chunks_deleted = 3;
}

// Configuration management messages
message LoadConfigurationRequest {
  optional string config_path = 1;
}

message LoadConfigurationResponse {
  bool success = 1;
  string message = 2;
  string config_yaml = 3;
  repeated string config_sources = 4;
}

message SaveConfigurationRequest {
  string config_yaml = 1;
  string target_path = 2;
}

message SaveConfigurationResponse {
  bool success = 1;
  string message = 2;
}

message ValidateConfigurationRequest {
  string config_yaml = 1;
}

message ValidateConfigurationResponse {
  bool valid = 1;
  repeated string errors = 2;
  repeated string warnings = 3;
}

// Memory rule messages
message MemoryRule {
  string rule_id = 1;
  string category = 2;
  string name = 3;
  string rule_text = 4;
  string authority = 5;
  repeated string scope = 6;
  string source = 7;
  google.protobuf.Timestamp created_at = 8;
  google.protobuf.Timestamp updated_at = 9;
}

message AddMemoryRuleRequest {
  string category = 1;
  string name = 2;
  string rule_text = 3;
  optional string authority = 4;
  repeated string scope = 5;
  optional string source = 6;
}

message AddMemoryRuleResponse {
  bool success = 1;
  string message = 2;
  MemoryRule memory_rule = 3;
}

message ListMemoryRulesRequest {
  optional string category = 1;
  optional string authority = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message ListMemoryRulesResponse {
  repeated MemoryRule rules = 1;
  int32 total_count = 2;
}

message DeleteMemoryRuleRequest {
  string rule_id = 1;
}

message DeleteMemoryRuleResponse {
  bool success = 1;
  string message = 2;
}

message SearchMemoryRulesRequest {
  string query = 1;
  optional string category = 2;
  optional string authority = 3;
  int32 limit = 4;
}

message SearchMemoryRulesResponse {
  repeated MemoryRuleMatch matches = 1;
}

message MemoryRuleMatch {
  MemoryRule rule = 1;
  double score = 2;
}

// Processing status messages
message GetProcessingStatusRequest {
  bool include_history = 1;
  int32 history_limit = 2;
}

message ProcessingStatusResponse {
  repeated ProcessingTask active_tasks = 1;
  repeated ProcessingTask recent_tasks = 2;
  ProcessingStats stats = 3;
}

message ProcessingTask {
  string task_id = 1;
  string task_type = 2;
  string file_path = 3;
  string collection = 4;
  string status = 5;
  double progress_percent = 6;
  google.protobuf.Timestamp started_at = 7;
  optional google.protobuf.Timestamp completed_at = 8;
  optional string error_message = 9;
}

message ProcessingStats {
  int64 total_files_processed = 1;
  int64 total_files_failed = 2;
  int64 total_files_skipped = 3;
  int32 active_tasks = 4;
  int32 queued_tasks = 5;
  google.protobuf.Duration average_processing_time = 6;
  google.protobuf.Timestamp last_activity = 7;
}

// System status messages
message SystemStatusResponse {
  HealthStatus overall_status = 1;
  string message = 2;
  SystemInfo system_info = 3;
  repeated ComponentStatus components = 4;
  ProcessingStats processing_stats = 5;
  ResourceUsage resource_usage = 6;
}

message SystemInfo {
  string version = 1;
  google.protobuf.Timestamp started_at = 2;
  google.protobuf.Duration uptime = 3;
  string host_info = 4;
  string rust_version = 5;
  string config_file = 6;
}

message ComponentStatus {
  string name = 1;
  HealthStatus status = 2;
  string message = 3;
  map<string, string> metrics = 4;
}

message ResourceUsage {
  double cpu_percent = 1;
  int64 memory_bytes = 2;
  int64 memory_peak_bytes = 3;
  int32 open_files = 4;
  int32 active_connections = 5;
  double disk_usage_percent = 6;
}

// Streaming status messages
message StreamStatusRequest {
  int32 update_interval_seconds = 1;
  bool include_history = 2;
  optional string collection_filter = 3;
}

message ProcessingStatusUpdate {
  google.protobuf.Timestamp timestamp = 1;
  repeated ProcessingTask active_tasks = 2;
  repeated ProcessingTask recent_completed = 3;
  ProcessingStats current_stats = 4;
  QueueStatus queue_status = 5;
}

message StreamMetricsRequest {
  int32 update_interval_seconds = 1;
  bool include_detailed_metrics = 2;
}

message SystemMetricsUpdate {
  google.protobuf.Timestamp timestamp = 1;
  ResourceUsage resource_usage = 2;
  EngineStats engine_stats = 3;
  repeated CollectionStats collection_stats = 4;
  PerformanceMetrics performance_metrics = 5;
}

message StreamQueueRequest {
  int32 update_interval_seconds = 1;
  optional string collection_filter = 2;
}

message QueueStatusUpdate {
  google.protobuf.Timestamp timestamp = 1;
  QueueStatus queue_status = 2;
  repeated QueuedFile recent_additions = 3;
  repeated ProcessingProgress active_processing = 4;
}

message QueueStatus {
  int32 total_queued = 1;
  int32 high_priority = 2;
  int32 normal_priority = 3;
  int32 low_priority = 4;
  int32 urgent_priority = 5;
  repeated string collections_with_queued = 6;
  google.protobuf.Duration estimated_completion_time = 7;
}

message QueuedFile {
  string file_path = 1;
  string collection = 2;
  string priority = 3;
  google.protobuf.Timestamp queued_at = 4;
  int64 file_size_bytes = 5;
}

message ProcessingProgress {
  string task_id = 1;
  string file_path = 2;
  string collection = 3;
  double progress_percent = 4;
  string current_stage = 5;
  google.protobuf.Timestamp started_at = 6;
  google.protobuf.Duration estimated_remaining = 7;
}

message PerformanceMetrics {
  double processing_rate_files_per_hour = 1;
  google.protobuf.Duration average_processing_time = 2;
  double success_rate_percent = 3;
  int32 concurrent_tasks = 4;
  int64 throughput_bytes_per_second = 5;
  repeated BottleneckInfo bottlenecks = 6;
}

message BottleneckInfo {
  string component = 1;
  string description = 2;
  double severity = 3;
  string suggestion = 4;
}