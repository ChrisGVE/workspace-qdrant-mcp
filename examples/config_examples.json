{
  "examples": {
    "software_development": {
      "description": "Software development workflow examples",
      "collections": ["project", "docs", "tests", "architecture"],
      "global_collections": ["patterns", "best-practices", "solutions"],
      "claude_desktop_config": {
        "mcpServers": {
          "workspace-qdrant-mcp": {
            "command": "workspace-qdrant-mcp",
            "env": {
              "QDRANT_URL": "http://localhost:6333",
              "COLLECTIONS": "project,docs,tests,architecture",
              "GLOBAL_COLLECTIONS": "patterns,best-practices,solutions",
              "GITHUB_USER": "yourusername"
            }
          }
        }
      },
      "sample_prompts": [
        "Search my architecture decisions for authentication patterns",
        "Find all API documentation and usage examples",
        "Show me code review best practices from our team",
        "What testing strategies have we documented?"
      ]
    },
    "research": {
      "description": "Academic research workflow examples",
      "collections": ["papers", "notes", "reviews", "experiments"],
      "global_collections": ["citations", "methodologies", "datasets"],
      "claude_desktop_config": {
        "mcpServers": {
          "workspace-qdrant-mcp": {
            "command": "workspace-qdrant-mcp",
            "env": {
              "QDRANT_URL": "http://localhost:6333",
              "COLLECTIONS": "papers,notes,reviews,experiments",
              "GLOBAL_COLLECTIONS": "citations,methodologies,datasets",
              "FASTEMBED_MODEL": "BAAI/bge-base-en-v1.5"
            }
          }
        }
      },
      "sample_prompts": [
        "Find papers about attention mechanisms in neural networks",
        "Search for methodologies used in machine learning research",
        "What literature reviews exist on federated learning?",
        "Show me experimental results from computer vision studies"
      ]
    },
    "business": {
      "description": "Business workflow examples",
      "collections": ["meetings", "documents", "projects", "processes"],
      "global_collections": ["knowledge-base", "policies", "templates"],
      "claude_desktop_config": {
        "mcpServers": {
          "workspace-qdrant-mcp": {
            "command": "workspace-qdrant-mcp",
            "env": {
              "QDRANT_URL": "http://localhost:6333",
              "COLLECTIONS": "meetings,documents,projects,processes",
              "GLOBAL_COLLECTIONS": "knowledge-base,policies,templates"
            }
          }
        }
      },
      "sample_prompts": [
        "Find all meeting notes about product strategy decisions",
        "Search for customer onboarding processes and procedures",
        "Show me project updates from the engineering team",
        "What policies do we have for remote work?"
      ]
    },
    "personal": {
      "description": "Personal knowledge management examples",
      "collections": ["notes", "ideas", "learning", "projects"],
      "global_collections": ["references", "templates", "inspiration"],
      "claude_desktop_config": {
        "mcpServers": {
          "workspace-qdrant-mcp": {
            "command": "workspace-qdrant-mcp",
            "env": {
              "QDRANT_URL": "http://localhost:6333",
              "COLLECTIONS": "notes,ideas,learning,projects",
              "GLOBAL_COLLECTIONS": "references,templates,inspiration"
            }
          }
        }
      },
      "sample_prompts": [
        "Show me my learning plan for Python programming",
        "Find all project ideas related to web development",
        "Search my daily notes for insights about productivity",
        "What books am I currently reading and what are my thoughts?"
      ]
    }
  },
  "integrations": {
    "vscode": {
      "description": "VS Code workspace integration",
      "setup_command": "python examples/integrations/vscode/setup_workspace.py",
      "required_extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-toolsai.jupyter",
        "yzhang.markdown-all-in-one",
        "ms-vscode.vscode-json"
      ],
      "custom_tasks": [
        "Start Qdrant Server",
        "Test Workspace Connection",
        "List Collections",
        "Generate Daily Note",
        "Backup Collections"
      ]
    },
    "automation": {
      "description": "Automation scripts and workflows",
      "cli_command": "python examples/integrations/automation/cli_tools/wq_cli.py",
      "workflows": [
        "Daily maintenance workflow",
        "Weekly system cleanup",
        "Automated backup creation",
        "Performance monitoring"
      ],
      "batch_operations": [
        "Bulk document processing",
        "Collection migration",
        "Metadata updates",
        "Data cleanup utilities"
      ]
    }
  },
  "performance": {
    "large_datasets": {
      "description": "Large dataset processing strategies",
      "chunked_ingestion": {
        "chunk_size": 1000,
        "max_workers": 4,
        "memory_limit_mb": 2048,
        "recommended_for": "Datasets > 10,000 documents"
      },
      "streaming_processor": {
        "buffer_size": 100,
        "batch_commit_size": 50,
        "recommended_for": "Continuous data ingestion"
      }
    },
    "search_optimization": {
      "description": "Search performance optimization",
      "caching": {
        "cache_size": 1000,
        "ttl_minutes": 30,
        "hit_rate_target": 0.7
      },
      "query_optimization": {
        "enable_query_rewriting": true,
        "enable_term_boosting": true,
        "stop_word_filtering": true
      }
    }
  },
  "setup_instructions": {
    "quick_start": [
      "1. Install workspace-qdrant-mcp: pip install workspace-qdrant-mcp",
      "2. Start Qdrant server: docker run -d --name qdrant -p 6333:6333 qdrant/qdrant",
      "3. Choose your domain and copy the corresponding claude_desktop_config",
      "4. Import sample data: python examples/sample_data_import.py --project-name myproject",
      "5. Start using Claude with your new knowledge base!"
    ],
    "advanced_setup": [
      "1. Configure environment variables for your specific use case",
      "2. Set up VS Code integration for development workflows",
      "3. Configure automation scripts for maintenance",
      "4. Set up performance monitoring for production use",
      "5. Customize collection schemas for your data types"
    ]
  },
  "troubleshooting": {
    "common_issues": {
      "connection_failed": {
        "description": "Cannot connect to Qdrant server",
        "solutions": [
          "Verify Qdrant server is running: curl http://localhost:6333",
          "Check QDRANT_URL environment variable",
          "Ensure no firewall blocking port 6333"
        ]
      },
      "import_errors": {
        "description": "Sample data import fails",
        "solutions": [
          "Check workspace-qdrant-mcp is properly installed",
          "Verify Python dependencies are installed",
          "Check file permissions in the examples directory"
        ]
      },
      "performance_issues": {
        "description": "Slow search or ingestion performance",
        "solutions": [
          "Use chunked ingestion for large datasets",
          "Enable search result caching",
          "Optimize Qdrant server configuration",
          "Consider using performance monitoring tools"
        ]
      }
    }
  }
}