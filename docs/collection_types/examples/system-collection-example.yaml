# SYSTEM Collection Configuration Example
#
# System collections use the __ (double underscore) prefix and are managed by
# the CLI with read-only access for LLM/MCP. They use cumulative deletion
# (mark + batch cleanup) for performance.
#
# Use cases:
# - System configuration storage
# - CLI-managed metadata
# - Internal state tracking
# - Administrative collections

# Required Metadata Fields
metadata:
  # Collection name - MUST start with __ (double underscore)
  # Pattern: ^__[a-zA-Z0-9_-]+$
  # Length: 3-128 characters
  collection_name: "__system_docs"

  # Creation timestamp - ISO 8601 format
  # Generated automatically if not provided
  created_at: "2025-01-03T10:00:00Z"

  # Collection category - MUST be 'system' for SYSTEM collections
  # This is enforced by type validation
  collection_category: "system"

# Optional Metadata Fields
optional_metadata:
  # Last update timestamp - ISO 8601 format
  # Automatically updated on modifications
  updated_at: "2025-01-03T12:30:00Z"

  # Human-readable description
  # Maximum length: 1024 characters
  description: "System documentation and configuration storage"

  # CLI write access - Default: true
  # Controls whether CLI can write to this collection
  cli_writable: true

# Performance Settings
performance:
  # Batch processing size for ingestion
  # SYSTEM collections use smaller batches (50) for reliability
  batch_size: 50

  # Maximum concurrent operations
  # Limited to 3 for SYSTEM collections to avoid contention
  max_concurrent_operations: 3

  # Priority weight (1=lowest, 5=highest)
  # SYSTEM collections have high priority (4) for responsive CLI
  priority_weight: 4

  # Cache TTL in seconds
  # SYSTEM collections cached longer (600s = 10min)
  cache_ttl_seconds: 600

  # Enable batch processing
  enable_batch_processing: true

  # Enable caching for faster reads
  enable_caching: true

  # Retry configuration
  max_retries: 3
  retry_delay_seconds: 1

# Deletion Handling
deletion:
  # Deletion mode - CUMULATIVE for SYSTEM collections
  # Files are marked as deleted and cleaned up in batches
  mode: "cumulative"

  # Batch cleanup schedule
  # Runs automatically when queue reaches threshold or on timer
  batch_cleanup_schedule: "24 hours or 1000 items"

  # Retention policy
  # How long deleted items remain in queue before cleanup
  retention_hours: 24

# Migration Settings
migration:
  # Supports legacy format (pre-typed collections)
  supports_legacy_format: true

  # Legacy collection name patterns to auto-detect
  legacy_collection_patterns:
    - "^__[a-zA-Z0-9_-]+$"

  # Migration batch size
  migration_batch_size: 50

  # Auto-detect legacy collections
  auto_detect_legacy: true

  # Preserve metadata from legacy collections
  preserve_legacy_metadata: true

# Access Control
access:
  # CLI can write (create, update, delete)
  cli_writable: true

  # MCP/LLM has read-only access
  mcp_readonly: true

  # Not included in global search results
  globally_searchable: false

  # Tenant isolation enabled
  tenant_isolated: true

# Validation Rules
validation:
  # Name must start with __
  name_pattern: "^__[a-zA-Z0-9_-]+$"

  # Minimum name length (including __)
  min_name_length: 3

  # Maximum name length
  max_name_length: 128

  # Required metadata fields
  required_fields:
    - collection_name
    - created_at
    - collection_category

# Example CLI Commands
commands:
  # Create SYSTEM collection
  create: "wqm admin create-collection __system_docs"

  # List SYSTEM collections
  list: "wqm collections list-types --format table"

  # Validate SYSTEM collection
  validate: "wqm collections validate-types --severity error"

  # View deletion status
  deletion_status: "wqm collections deletion-status --verbose"
