{
  "test_results": {
    "validation": {
      "current_status": {
        "returncode": 0,
        "stdout": "workspace-qdrant-mcp v0.2.1.dev0\n- workspace-qdrant-mcp\n",
        "stderr": "",
        "success": true
      },
      "reinstall_force": {
        "returncode": 0,
        "stdout": "",
        "stderr": "Resolved 96 packages in 751ms\nUninstalled 25 packages in 325ms\nInstalled 1 package in 7ms\n - aiofiles==24.1.0\n - aiohappyeyeballs==2.6.1\n - aiohttp==3.12.15\n - aiosignal==1.4.0\n - beautifulsoup4==4.13.5\n - ebooklib==0.19\n - fastapi==0.116.1\n - frozenlist==1.7.0\n - grpcio-tools==1.74.0\n - jinja2==3.1.6\n - lxml==6.0.1\n - markdown==3.9\n - maturin==1.9.4\n - multidict==6.6.4\n - propcache==0.3.2\n - python-docx==1.2.0\n - python-magic==0.4.27\n - python-pptx==1.0.2\n - setuptools==80.9.0\n - soupsieve==2.8\n - structlog==25.4.0\n - watchfiles==1.1.0\n - workspace-qdrant-mcp==0.2.1.dev0 (from file:///Users/chris/Dropbox/dev/ai/claude-code-cfg/mcp/workspace-qdrant-mcp)\n + workspace-qdrant-mcp==0.1.0\n - xlsxwriter==3.2.5\n - yarl==1.20.1\nInstalled 8 executables: workspace-qdrant-admin, workspace-qdrant-health, workspace-qdrant-ingest, workspace-qdrant-mcp, workspace-qdrant-setup, workspace-qdrant-test, workspace-qdrant-validate, wqutil\n",
        "success": true
      },
      "which_workspace_after": {
        "returncode": 0,
        "stdout": "/Users/chris/.local/bin/workspace-qdrant-mcp\n",
        "stderr": "",
        "success": true
      },
      "which_wqm_after": {
        "returncode": 1,
        "stdout": "",
        "stderr": "",
        "success": false
      },
      "workspace_help_after": {
        "returncode": 0,
        "stdout": "                                                                                \n Usage: workspace-qdrant-mcp [OPTIONS]                                          \n                                                                                \n Start the workspace-qdrant-mcp MCP server.                                     \n                                                                                \n Initializes the workspace environment and starts the FastMCP server using the  \n specified transport protocol. For MCP clients like Claude Desktop/Code, use    \n 'stdio' transport (default). HTTP transports are available for web-based       \n clients.                                                                       \n Args:     transport: Transport protocol - 'stdio' for MCP clients,             \n 'http'/'sse'/'streamable-http' for web     host: IP address to bind the server \n to (only used for HTTP transports)     port: TCP port number for the server    \n (only used for HTTP transports)     config_file: Optional path to custom       \n configuration file (overrides defaults)                                        \n Environment Variables:     CONFIG_FILE: Path to configuration file (can be set \n via --config-file)     QDRANT_URL: Qdrant database endpoint URL                \n OPENAI_API_KEY: Required for embedding generation (if using OpenAI models)     \n Example:     ```bash     # Start MCP server for Claude Desktop (default)       \n python -m workspace_qdrant_mcp.server                                          \n # Start with custom configuration     python -m workspace_qdrant_mcp.server    \n --config-file ./custom.toml                                                    \n # Start HTTP server for web clients     python -m workspace_qdrant_mcp.server  \n --transport http --host 0.0.0.0 --port 9000     ```                            \n                                                                                \n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --transport          TEXT     Transport protocol (stdio, http, sse,          \u2502\n\u2502                               streamable-http)                               \u2502\n\u2502                               [default: stdio]                               \u2502\n\u2502 --host               TEXT     Host to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 127.0.0.1]                           \u2502\n\u2502 --port               INTEGER  Port to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 8000]                                \u2502\n\u2502 --config-file        TEXT     Path to configuration file                     \u2502\n\u2502 --help                        Show this message and exit.                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n",
        "stderr": "",
        "success": true
      },
      "wqm_help_after": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      },
      "wqm_version_after": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      },
      "dir_test_0": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      },
      "dir_test_1": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      },
      "transport_stdio_after": {
        "returncode": 0,
        "stdout": "                                                                                \n Usage: workspace-qdrant-mcp [OPTIONS]                                          \n                                                                                \n Start the workspace-qdrant-mcp MCP server.                                     \n                                                                                \n Initializes the workspace environment and starts the FastMCP server using the  \n specified transport protocol. For MCP clients like Claude Desktop/Code, use    \n 'stdio' transport (default). HTTP transports are available for web-based       \n clients.                                                                       \n Args:     transport: Transport protocol - 'stdio' for MCP clients,             \n 'http'/'sse'/'streamable-http' for web     host: IP address to bind the server \n to (only used for HTTP transports)     port: TCP port number for the server    \n (only used for HTTP transports)     config_file: Optional path to custom       \n configuration file (overrides defaults)                                        \n Environment Variables:     CONFIG_FILE: Path to configuration file (can be set \n via --config-file)     QDRANT_URL: Qdrant database endpoint URL                \n OPENAI_API_KEY: Required for embedding generation (if using OpenAI models)     \n Example:     ```bash     # Start MCP server for Claude Desktop (default)       \n python -m workspace_qdrant_mcp.server                                          \n # Start with custom configuration     python -m workspace_qdrant_mcp.server    \n --config-file ./custom.toml                                                    \n # Start HTTP server for web clients     python -m workspace_qdrant_mcp.server  \n --transport http --host 0.0.0.0 --port 9000     ```                            \n                                                                                \n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --transport          TEXT     Transport protocol (stdio, http, sse,          \u2502\n\u2502                               streamable-http)                               \u2502\n\u2502                               [default: stdio]                               \u2502\n\u2502 --host               TEXT     Host to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 127.0.0.1]                           \u2502\n\u2502 --port               INTEGER  Port to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 8000]                                \u2502\n\u2502 --config-file        TEXT     Path to configuration file                     \u2502\n\u2502 --help                        Show this message and exit.                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n",
        "stderr": "",
        "success": true
      },
      "transport_http_after": {
        "returncode": 0,
        "stdout": "                                                                                \n Usage: workspace-qdrant-mcp [OPTIONS]                                          \n                                                                                \n Start the workspace-qdrant-mcp MCP server.                                     \n                                                                                \n Initializes the workspace environment and starts the FastMCP server using the  \n specified transport protocol. For MCP clients like Claude Desktop/Code, use    \n 'stdio' transport (default). HTTP transports are available for web-based       \n clients.                                                                       \n Args:     transport: Transport protocol - 'stdio' for MCP clients,             \n 'http'/'sse'/'streamable-http' for web     host: IP address to bind the server \n to (only used for HTTP transports)     port: TCP port number for the server    \n (only used for HTTP transports)     config_file: Optional path to custom       \n configuration file (overrides defaults)                                        \n Environment Variables:     CONFIG_FILE: Path to configuration file (can be set \n via --config-file)     QDRANT_URL: Qdrant database endpoint URL                \n OPENAI_API_KEY: Required for embedding generation (if using OpenAI models)     \n Example:     ```bash     # Start MCP server for Claude Desktop (default)       \n python -m workspace_qdrant_mcp.server                                          \n # Start with custom configuration     python -m workspace_qdrant_mcp.server    \n --config-file ./custom.toml                                                    \n # Start HTTP server for web clients     python -m workspace_qdrant_mcp.server  \n --transport http --host 0.0.0.0 --port 9000     ```                            \n                                                                                \n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --transport          TEXT     Transport protocol (stdio, http, sse,          \u2502\n\u2502                               streamable-http)                               \u2502\n\u2502                               [default: stdio]                               \u2502\n\u2502 --host               TEXT     Host to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 127.0.0.1]                           \u2502\n\u2502 --port               INTEGER  Port to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 8000]                                \u2502\n\u2502 --config-file        TEXT     Path to configuration file                     \u2502\n\u2502 --help                        Show this message and exit.                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n",
        "stderr": "",
        "success": true
      },
      "config_test": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      }
    },
    "edge_cases": {
      "invalid_transport": {
        "returncode": 0,
        "stdout": "                                                                                \n Usage: workspace-qdrant-mcp [OPTIONS]                                          \n                                                                                \n Start the workspace-qdrant-mcp MCP server.                                     \n                                                                                \n Initializes the workspace environment and starts the FastMCP server using the  \n specified transport protocol. For MCP clients like Claude Desktop/Code, use    \n 'stdio' transport (default). HTTP transports are available for web-based       \n clients.                                                                       \n Args:     transport: Transport protocol - 'stdio' for MCP clients,             \n 'http'/'sse'/'streamable-http' for web     host: IP address to bind the server \n to (only used for HTTP transports)     port: TCP port number for the server    \n (only used for HTTP transports)     config_file: Optional path to custom       \n configuration file (overrides defaults)                                        \n Environment Variables:     CONFIG_FILE: Path to configuration file (can be set \n via --config-file)     QDRANT_URL: Qdrant database endpoint URL                \n OPENAI_API_KEY: Required for embedding generation (if using OpenAI models)     \n Example:     ```bash     # Start MCP server for Claude Desktop (default)       \n python -m workspace_qdrant_mcp.server                                          \n # Start with custom configuration     python -m workspace_qdrant_mcp.server    \n --config-file ./custom.toml                                                    \n # Start HTTP server for web clients     python -m workspace_qdrant_mcp.server  \n --transport http --host 0.0.0.0 --port 9000     ```                            \n                                                                                \n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --transport          TEXT     Transport protocol (stdio, http, sse,          \u2502\n\u2502                               streamable-http)                               \u2502\n\u2502                               [default: stdio]                               \u2502\n\u2502 --host               TEXT     Host to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 127.0.0.1]                           \u2502\n\u2502 --port               INTEGER  Port to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 8000]                                \u2502\n\u2502 --config-file        TEXT     Path to configuration file                     \u2502\n\u2502 --help                        Show this message and exit.                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n",
        "stderr": "",
        "success": true
      },
      "invalid_port": {
        "returncode": 0,
        "stdout": "                                                                                \n Usage: workspace-qdrant-mcp [OPTIONS]                                          \n                                                                                \n Start the workspace-qdrant-mcp MCP server.                                     \n                                                                                \n Initializes the workspace environment and starts the FastMCP server using the  \n specified transport protocol. For MCP clients like Claude Desktop/Code, use    \n 'stdio' transport (default). HTTP transports are available for web-based       \n clients.                                                                       \n Args:     transport: Transport protocol - 'stdio' for MCP clients,             \n 'http'/'sse'/'streamable-http' for web     host: IP address to bind the server \n to (only used for HTTP transports)     port: TCP port number for the server    \n (only used for HTTP transports)     config_file: Optional path to custom       \n configuration file (overrides defaults)                                        \n Environment Variables:     CONFIG_FILE: Path to configuration file (can be set \n via --config-file)     QDRANT_URL: Qdrant database endpoint URL                \n OPENAI_API_KEY: Required for embedding generation (if using OpenAI models)     \n Example:     ```bash     # Start MCP server for Claude Desktop (default)       \n python -m workspace_qdrant_mcp.server                                          \n # Start with custom configuration     python -m workspace_qdrant_mcp.server    \n --config-file ./custom.toml                                                    \n # Start HTTP server for web clients     python -m workspace_qdrant_mcp.server  \n --transport http --host 0.0.0.0 --port 9000     ```                            \n                                                                                \n\u256d\u2500 Options \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n\u2502 --transport          TEXT     Transport protocol (stdio, http, sse,          \u2502\n\u2502                               streamable-http)                               \u2502\n\u2502                               [default: stdio]                               \u2502\n\u2502 --host               TEXT     Host to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 127.0.0.1]                           \u2502\n\u2502 --port               INTEGER  Port to bind to (for HTTP transports only)     \u2502\n\u2502                               [default: 8000]                                \u2502\n\u2502 --config-file        TEXT     Path to configuration file                     \u2502\n\u2502 --help                        Show this message and exit.                    \u2502\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\n",
        "stderr": "",
        "success": true
      },
      "invalid_config": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      },
      "help_speed": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false,
        "execution_time": 0.007
      },
      "wqm_version_check": {
        "returncode": 127,
        "stdout": "",
        "stderr": "/bin/sh: wqm: command not found\n",
        "success": false
      }
    }
  },
  "analysis": {
    "installation_success": "working",
    "command_availability": "partial",
    "functionality_working": "issues",
    "cross_directory_working": "issues",
    "transport_modes_working": "working",
    "edge_cases_handled": "issues",
    "overall_grade": "C",
    "issues_found": [
      "Not all commands are globally available",
      "Basic functionality not working after installation",
      "Cross-directory functionality issues",
      "Edge cases not handled properly"
    ],
    "recommendations": [
      "Needs improvement! Several issues affecting functionality"
    ]
  },
  "timestamp": 1757421955.208426
}