<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="83" skipped="23" tests="350" time="12.066" timestamp="2025-08-29T17:17:29.484408+00:00" hostname="pkrvmccyg1gnepe"><testcase classname="tests.unit.test_cli_parsers.TestDocumentParserBase" name="test_parsed_document_creation" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestDocumentParserBase" name="test_parsed_document_hash_consistency" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestDocumentParserBase" name="test_parsed_document_hash_uniqueness" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_supported_extensions" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_format_name" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_can_parse" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_parse_simple_text" time="0.009" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_parse_with_encoding_detection" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_parse_with_content_cleaning" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_parse_programming_file" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_content_analysis" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_language_detection" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestTextParser" name="test_get_parsing_options" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_supported_extensions" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_format_name" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_parse_simple_markdown" time="0.004" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_parse_with_frontmatter" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_frontmatter_extraction" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_markdown_structure_analysis" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_structured_text_conversion" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestMarkdownParser" name="test_get_parsing_options" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_supported_extensions" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_format_name" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_can_parse_without_pypdf2" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_can_parse_with_pypdf2" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_parse_without_pypdf2_raises_error" time="0.002" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_parse_simple_pdf" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_parse_encrypted_pdf_with_password" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_parse_encrypted_pdf_without_password_raises_error" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_pdf_date_parsing" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_pdf_text_cleaning" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_pdf_content_analysis" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestPDFParser" name="test_get_parsing_options" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestParserErrorHandling" name="test_nonexistent_file_raises_error" time="0.001" /><testcase classname="tests.unit.test_cli_parsers.TestParserErrorHandling" name="test_unsupported_format_validation" time="0.003" /><testcase classname="tests.unit.test_cli_parsers.TestParserErrorHandling" name="test_directory_instead_of_file_raises_error" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_init" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_initialize_success" time="0.011" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_initialize_already_initialized" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_initialize_qdrant_connection_failure" time="0.004" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_get_status_not_initialized" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_get_status_success" time="0.009" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_get_status_qdrant_error" time="0.009" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_list_collections_not_initialized" time="0.003" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_list_collections_success" time="0.005"><failure message="AssertionError: assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x7f8985ea0040&gt; == ['collection1', 'collection2', 'collection3']">tests/unit/test_client.py:240: in test_list_collections_success
    assert collections == ["collection1", "collection2", "collection3"]
E   AssertionError: assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x7f8985ea0040&gt; == ['collection1', 'collection2', 'collection3']</failure></testcase><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_list_collections_error" time="0.004"><failure message="assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x7f8985ea0e40&gt; == []">tests/unit/test_client.py:258: in test_list_collections_error
    assert collections == []
E   assert &lt;coroutine object AsyncMockMixin._execute_mock_call at 0x7f8985ea0e40&gt; == []</failure></testcase><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_get_project_info" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_refresh_project_detection" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_get_embedding_service" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_close" time="0.007" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_close_no_client" time="0.004" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_project_detector_github_user_configuration" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_initialize_collection_manager_configuration" time="0.009" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_embedding_service_configuration" time="0.002" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_initialize_project_detection_and_collection_setup" time="0.010" /><testcase classname="tests.unit.test_client.TestQdrantWorkspaceClient" name="test_get_status_comprehensive_response" time="0.008" /><testcase classname="tests.unit.test_collections.TestCollectionConfig" name="test_collection_config_defaults" time="0.001" /><testcase classname="tests.unit.test_collections.TestCollectionConfig" name="test_collection_config_custom_values" time="0.001" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_init" time="0.004" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_initialize_workspace_collections_basic" time="0.008" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_initialize_workspace_collections_with_subprojects" time="0.005" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_initialize_workspace_collections_existing_collections" time="0.005" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_initialize_workspace_collections_global_collections" time="0.005" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_create_collection_success" time="0.000"><skipped type="pytest.skip" message="create_collection method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:215: create_collection method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_create_collection_without_sparse_vectors" time="0.000"><skipped type="pytest.skip" message="create_collection method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:244: create_collection method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_create_collection_failure" time="0.000"><skipped type="pytest.skip" message="create_collection method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:268: create_collection method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_delete_collection_success" time="0.000"><skipped type="pytest.skip" message="delete_collection method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:288: delete_collection method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_delete_collection_failure" time="0.000"><skipped type="pytest.skip" message="delete_collection method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:303: delete_collection method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_collection_exists_true" time="0.000"><skipped type="pytest.skip" message="collection_exists method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:317: collection_exists method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_collection_exists_false" time="0.000"><skipped type="pytest.skip" message="collection_exists method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:342: collection_exists method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_collection_exists_exception" time="0.000"><skipped type="pytest.skip" message="collection_exists method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:356: collection_exists method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_list_collections" time="0.000"><skipped type="pytest.skip" message="list_collections method does not exist - use list_workspace_collections instead">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:370: list_collections method does not exist - use list_workspace_collections instead</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_list_collections_empty" time="0.000"><skipped type="pytest.skip" message="list_collections method does not exist - use list_workspace_collections instead">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:390: list_collections method does not exist - use list_workspace_collections instead</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_list_collections_filtered" time="0.000"><skipped type="pytest.skip" message="list_collections method does not exist - use list_workspace_collections instead">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:404: list_collections method does not exist - use list_workspace_collections instead</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_get_collection_info_success" time="0.004"><failure message="KeyError: 'vectors_count'">tests/unit/test_collections.py:466: in test_get_collection_info_success
    assert result["collections"]["test-collection"]["vectors_count"] == 150
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'vectors_count'</failure></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_get_collection_info_not_found" time="0.003" /><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_generate_collection_name_project_scoped" time="0.000"><skipped type="pytest.skip" message="_generate_collection_name method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:488: _generate_collection_name method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_generate_collection_name_global" time="0.000"><skipped type="pytest.skip" message="_generate_collection_name method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:499: _generate_collection_name method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_generate_collection_name_with_prefix" time="0.000"><skipped type="pytest.skip" message="_generate_collection_name method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:510: _generate_collection_name method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_build_vectors_config_with_sparse" time="0.000"><skipped type="pytest.skip" message="_build_vectors_config method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:524: _build_vectors_config method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_build_vectors_config_without_sparse" time="0.000"><skipped type="pytest.skip" message="_build_vectors_config method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:552: _build_vectors_config method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_build_vectors_config_invalid_distance" time="0.000"><skipped type="pytest.skip" message="_build_vectors_config method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:575: _build_vectors_config method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_ensure_collection_exists_create_new" time="0.000"><skipped type="pytest.skip" message="ensure_collection_exists public method does not exist - only _ensure_collection_exists private method">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:593: ensure_collection_exists public method does not exist - only _ensure_collection_exists private method</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_ensure_collection_exists_already_exists" time="0.000"><skipped type="pytest.skip" message="ensure_collection_exists public method does not exist - only _ensure_collection_exists private method">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:614: ensure_collection_exists public method does not exist - only _ensure_collection_exists private method</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_validate_collection_limits_under_limit" time="0.000"><skipped type="pytest.skip" message="_validate_collection_limits method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:640: _validate_collection_limits method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_validate_collection_limits_at_limit" time="0.000"><skipped type="pytest.skip" message="_validate_collection_limits method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:652: _validate_collection_limits method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_validate_collection_limits_over_limit" time="0.000"><skipped type="pytest.skip" message="_validate_collection_limits method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:664: _validate_collection_limits method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_collections.TestWorkspaceCollectionManager" name="test_validate_collection_limits_unlimited" time="0.000"><skipped type="pytest.skip" message="_validate_collection_limits method does not exist in actual implementation">/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/tests/unit/test_collections.py:676: _validate_collection_limits method does not exist in actual implementation</skipped></testcase><testcase classname="tests.unit.test_config.TestEmbeddingConfig" name="test_default_values" time="0.001" /><testcase classname="tests.unit.test_config.TestEmbeddingConfig" name="test_custom_values" time="0.001" /><testcase classname="tests.unit.test_config.TestEmbeddingConfig" name="test_chunk_size_validation[1000-200-True]" time="0.001" /><testcase classname="tests.unit.test_config.TestEmbeddingConfig" name="test_chunk_size_validation[500-100-True]" time="0.001" /><testcase classname="tests.unit.test_config.TestEmbeddingConfig" name="test_chunk_size_validation[100-200-False]" time="0.001" /><testcase classname="tests.unit.test_config.TestEmbeddingConfig" name="test_chunk_size_validation[200-200-False]" time="0.001" /><testcase classname="tests.unit.test_config.TestQdrantConfig" name="test_default_values" time="0.001" /><testcase classname="tests.unit.test_config.TestQdrantConfig" name="test_custom_values" time="0.001" /><testcase classname="tests.unit.test_config.TestWorkspaceConfig" name="test_default_values" time="0.001" /><testcase classname="tests.unit.test_config.TestWorkspaceConfig" name="test_custom_values" time="0.001" /><testcase classname="tests.unit.test_config.TestConfig" name="test_default_values" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_custom_values" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_nested_config_override" time="0.003" /><testcase classname="tests.unit.test_config.TestConfig" name="test_environment_variable_loading" time="0.004" /><testcase classname="tests.unit.test_config.TestConfig" name="test_nested_environment_variables" time="0.003" /><testcase classname="tests.unit.test_config.TestConfig" name="test_legacy_environment_variables" time="0.003" /><testcase classname="tests.unit.test_config.TestConfig" name="test_qdrant_client_config" time="0.003" /><testcase classname="tests.unit.test_config.TestConfig" name="test_qdrant_client_config_with_api_key" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_valid" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_missing_url" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_chunk_settings[1000-200-0]" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_chunk_settings[-1-200-1]" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_chunk_settings[1000--1-1]" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_chunk_settings[200-200-1]" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_chunk_settings[200-300-1]" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_batch_size" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_validate_config_empty_collections" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_env_file_loading" time="0.003" /><testcase classname="tests.unit.test_config.TestConfig" name="test_config_immutability_after_init" time="0.002" /><testcase classname="tests.unit.test_config.TestConfig" name="test_config_serialization" time="0.002" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_init" time="0.002" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_qdrant_connection_success" time="0.004" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_qdrant_connection_failure" time="0.002" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_embedding_model_success" time="0.003" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_embedding_model_failure" time="0.002" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_project_detection_git_repo" time="0.023" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_project_detection_no_git" time="0.004" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_all_success" time="0.004" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_all_with_issues" time="0.003" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_all_with_warnings" time="0.013" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_config_basic_validation" time="0.003" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_generate_warnings_github_user_missing" time="0.004" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validation_exception_handling" time="0.002" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_validate_all_comprehensive_results" time="0.003" /><testcase classname="tests.unit.test_config_validator.TestConfigValidator" name="test_cli_validation_interface" time="0.002" /><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_client_not_initialized" time="0.011" /><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_empty_content" time="0.012" /><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_collection_not_found" time="0.011" /><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_single_success" time="0.014" /><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_generate_id" time="0.015" /><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_chunked_success" time="0.015"><failure message="KeyError: 'document_id'">tests/unit/test_documents.py:148: in test_add_document_chunked_success
    assert result["document_id"] == "doc123"
           ^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'document_id'</failure></testcase><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_chunked_partial_failure" time="0.015"><failure message="KeyError: 'points_added'">tests/unit/test_documents.py:187: in test_add_document_chunked_partial_failure
    assert result["points_added"] == 2  # Only 2 out of 3 chunks succeeded
           ^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'points_added'</failure></testcase><testcase classname="tests.unit.test_documents.TestAddDocument" name="test_add_document_exception_handling" time="0.016"><failure message="assert 'Connection error' in &quot;Failed to add document: '&gt;' not supported between instances of 'int' and 'AsyncMock'&quot;">tests/unit/test_documents.py:203: in test_add_document_exception_handling
    assert "Connection error" in result["error"]
E   assert 'Connection error' in "Failed to add document: '&gt;' not supported between instances of 'int' and 'AsyncMock'"</failure></testcase><testcase classname="tests.unit.test_documents.TestAddSingleDocument" name="test_add_single_document_success" time="0.014" /><testcase classname="tests.unit.test_documents.TestAddSingleDocument" name="test_add_single_document_no_sparse" time="0.014" /><testcase classname="tests.unit.test_documents.TestAddSingleDocument" name="test_add_single_document_exception" time="0.012" /><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_client_not_initialized" time="0.013" /><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_collection_not_found" time="0.011" /><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_not_found" time="0.013" /><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_metadata_only" time="0.014"><failure message="assert 0 == 1">tests/unit/test_documents.py:370: in test_update_document_metadata_only
    assert result["points_updated"] == 1
E   assert 0 == 1</failure></testcase><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_content_and_metadata" time="0.013" /><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_multiple_points" time="0.013"><failure message="assert 0 == 3">tests/unit/test_documents.py:454: in test_update_document_multiple_points
    assert result["points_updated"] == 3
E   assert 0 == 3</failure></testcase><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_partial_failure" time="0.015"><failure message="assert 0 == 1">tests/unit/test_documents.py:483: in test_update_document_partial_failure
    assert result["points_updated"] == 1  # Only one succeeded
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   assert 0 == 1</failure></testcase><testcase classname="tests.unit.test_documents.TestUpdateDocument" name="test_update_document_exception_handling" time="0.012" /><testcase classname="tests.unit.test_documents.TestDeleteDocument" name="test_delete_document_client_not_initialized" time="0.011" /><testcase classname="tests.unit.test_documents.TestDeleteDocument" name="test_delete_document_collection_not_found" time="0.011" /><testcase classname="tests.unit.test_documents.TestDeleteDocument" name="test_delete_document_success" time="0.012" /><testcase classname="tests.unit.test_documents.TestDeleteDocument" name="test_delete_document_no_operation_id" time="0.012" /><testcase classname="tests.unit.test_documents.TestDeleteDocument" name="test_delete_document_exception_handling" time="0.013" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_client_not_initialized" time="0.013" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_collection_not_found" time="0.015" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_not_found" time="0.014" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_single_success" time="0.013" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_with_vectors" time="0.014" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_chunked" time="0.013" /><testcase classname="tests.unit.test_documents.TestGetDocument" name="test_get_document_exception_handling" time="0.011" /><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_init" time="0.002" /><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_initialize_dense_only" time="0.005"><failure message="TypeError: object MagicMock can't be used in 'await' expression">tests/unit/test_embeddings.py:67: in test_initialize_dense_only
    await service.initialize()
src/workspace_qdrant_mcp/core/embeddings.py:126: in initialize
    self.dense_model = await asyncio.get_event_loop().run_in_executor(
E   TypeError: object MagicMock can't be used in 'await' expression</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_initialize_with_sparse_vectors" time="0.006"><failure message="TypeError: object MagicMock can't be used in 'await' expression">tests/unit/test_embeddings.py:101: in test_initialize_with_sparse_vectors
    await service.initialize()
src/workspace_qdrant_mcp/core/embeddings.py:126: in initialize
    self.dense_model = await asyncio.get_event_loop().run_in_executor(
E   TypeError: object MagicMock can't be used in 'await' expression</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_initialize_already_initialized" time="0.003" /><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_initialize_dense_model_failure" time="0.004"><failure message="Exception: Model loading failed">tests/unit/test_embeddings.py:135: in test_initialize_dense_model_failure
    await service.initialize()
src/workspace_qdrant_mcp/core/embeddings.py:126: in initialize
    self.dense_model = await asyncio.get_event_loop().run_in_executor(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1124: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1128: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1183: in _execute_mock_call
    raise effect
E   Exception: Model loading failed</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_initialize_sparse_model_failure" time="0.005"><failure message="TypeError: object MagicMock can't be used in 'await' expression">tests/unit/test_embeddings.py:167: in test_initialize_sparse_model_failure
    await service.initialize()
src/workspace_qdrant_mcp/core/embeddings.py:126: in initialize
    self.dense_model = await asyncio.get_event_loop().run_in_executor(
E   TypeError: object MagicMock can't be used in 'await' expression</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_not_initialized" time="2.720"><failure message="Failed: DID NOT RAISE &lt;class 'RuntimeError'&gt;">tests/unit/test_embeddings.py:176: in test_generate_embeddings_not_initialized
    with pytest.raises(RuntimeError, match="EmbeddingService must be initialized"):
E   Failed: DID NOT RAISE &lt;class 'RuntimeError'&gt;</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_dense_only" time="0.006"><failure message="AttributeError: 'list' object has no attribute 'tolist'">tests/unit/test_embeddings.py:190: in test_generate_embeddings_dense_only
    result = await service.generate_embeddings("test text")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:176: in generate_embeddings
    dense_embeddings = await self._generate_dense_embeddings(texts)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:212: in _generate_dense_embeddings
    return [embedding.tolist() for embedding in embeddings]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:212: in &lt;listcomp&gt;
    return [embedding.tolist() for embedding in embeddings]
            ^^^^^^^^^^^^^^^^
E   AttributeError: 'list' object has no attribute 'tolist'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_with_sparse" time="0.005"><failure message="AttributeError: 'list' object has no attribute 'tolist'">tests/unit/test_embeddings.py:213: in test_generate_embeddings_with_sparse
    result = await service.generate_embeddings("test text", include_sparse=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:176: in generate_embeddings
    dense_embeddings = await self._generate_dense_embeddings(texts)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:212: in _generate_dense_embeddings
    return [embedding.tolist() for embedding in embeddings]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:212: in &lt;listcomp&gt;
    return [embedding.tolist() for embedding in embeddings]
            ^^^^^^^^^^^^^^^^
E   AttributeError: 'list' object has no attribute 'tolist'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_sparse_requested_but_not_available" time="0.004"><failure message="AttributeError: 'list' object has no attribute 'tolist'">tests/unit/test_embeddings.py:235: in test_generate_embeddings_sparse_requested_but_not_available
    result = await service.generate_embeddings("test text", include_sparse=True)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:176: in generate_embeddings
    dense_embeddings = await self._generate_dense_embeddings(texts)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:212: in _generate_dense_embeddings
    return [embedding.tolist() for embedding in embeddings]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:212: in &lt;listcomp&gt;
    return [embedding.tolist() for embedding in embeddings]
            ^^^^^^^^^^^^^^^^
E   AttributeError: 'list' object has no attribute 'tolist'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_batch_processing" time="0.004"><failure message="AttributeError: 'EmbeddingService' object has no attribute 'generate_embeddings_batch'">tests/unit/test_embeddings.py:263: in test_generate_embeddings_batch_processing
    results = await service.generate_embeddings_batch(texts, include_sparse=True)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute 'generate_embeddings_batch'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_empty_text" time="0.006"><failure message="IndexError: list index out of range">tests/unit/test_embeddings.py:282: in test_generate_embeddings_empty_text
    await service.generate_embeddings("")
src/workspace_qdrant_mcp/core/embeddings.py:177: in generate_embeddings
    result["dense"] = dense_embeddings[0] if single_text else dense_embeddings
                      ^^^^^^^^^^^^^^^^^^^
E   IndexError: list index out of range</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_embeddings_exception_handling" time="0.005"><failure message="Exception: Embedding error">tests/unit/test_embeddings.py:295: in test_generate_embeddings_exception_handling
    await service.generate_embeddings("test text")
src/workspace_qdrant_mcp/core/embeddings.py:176: in generate_embeddings
    dense_embeddings = await self._generate_dense_embeddings(texts)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:209: in _generate_dense_embeddings
    embeddings = await asyncio.get_event_loop().run_in_executor(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/concurrent/futures/thread.py:58: in run
    result = self.fn(*self.args, **self.kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/core/embeddings.py:210: in &lt;lambda&gt;
    None, lambda: list(self.dense_model.embed(texts))
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1124: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1128: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1183: in _execute_mock_call
    raise effect
E   Exception: Embedding error</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_chunk_text_short_text" time="0.002" /><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_chunk_text_long_text" time="0.002" /><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_chunk_text_custom_separators" time="0.002"><failure message="TypeError: EmbeddingService.chunk_text() got an unexpected keyword argument 'separators'">tests/unit/test_embeddings.py:328: in test_chunk_text_custom_separators
    chunks = service.chunk_text(text, separators=["\n\n", ".", " "])
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: EmbeddingService.chunk_text() got an unexpected keyword argument 'separators'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_chunk_text_preserve_context" time="0.003"><failure message="AssertionError: assert (False or '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is' == 'mber 85. This is sentence number 86. This is sentence number 87. This is sentence number 88. This is sentence number 89. This is sentence number 90. This is sentence number 91. This is sentence number 92. This is sentence number 93. This is sentence number 94. This is sentence number 95. This is sentence number 96. This is sentence number 97. This is sentence number 98. This is sentence number 99.'&#10; +  where False = &lt;built-in method endswith of str object at 0x5646fcfbfe60&gt;('.')&#10; +    where &lt;built-in method endswith of str object at 0x5646fcfbfe60&gt; = '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is'.endswith&#10; +      where '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is' = &lt;built-in method rstrip of str object at 0x5646fcfbfe60&gt;()&#10; +        where &lt;built-in method rstrip of str object at 0x5646fcfbfe60&gt; = '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is'.rstrip&#10;  &#10;  - mber 85. This is sentence number 86. This is sentence number 87. This is sentence number 88. This is sentence number 89. This is sentence number 90. This is sentence number 91. This is sentence number 92. This is sentence number 93. This is sentence number 94. This is sentence number 95. This is sentence number 96. This is sentence number 97. This is sentence number 98. This is sentence number 99.&#10;  + 28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is)">tests/unit/test_embeddings.py:346: in test_chunk_text_preserve_context
    assert chunk.rstrip().endswith(".") or chunk == chunks[-1]
E   AssertionError: assert (False or '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is' == 'mber 85. This is sentence number 86. This is sentence number 87. This is sentence number 88. This is sentence number 89. This is sentence number 90. This is sentence number 91. This is sentence number 92. This is sentence number 93. This is sentence number 94. This is sentence number 95. This is sentence number 96. This is sentence number 97. This is sentence number 98. This is sentence number 99.'
E    +  where False = &lt;built-in method endswith of str object at 0x5646fcfbfe60&gt;('.')
E    +    where &lt;built-in method endswith of str object at 0x5646fcfbfe60&gt; = '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is'.endswith
E    +      where '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is' = &lt;built-in method rstrip of str object at 0x5646fcfbfe60&gt;()
E    +        where &lt;built-in method rstrip of str object at 0x5646fcfbfe60&gt; = '28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is'.rstrip
E     
E     - mber 85. This is sentence number 86. This is sentence number 87. This is sentence number 88. This is sentence number 89. This is sentence number 90. This is sentence number 91. This is sentence number 92. This is sentence number 93. This is sentence number 94. This is sentence number 95. This is sentence number 96. This is sentence number 97. This is sentence number 98. This is sentence number 99.
E     + 28. This is sentence number 29. This is sentence number 30. This is sentence number 31. This is sentence number 32. This is sentence number 33. This is sentence number 34. This is sentence number 35. This is sentence number 36. This is sentence number 37. This is sentence number 38. This is sentence number 39. This is sentence number 40. This is sentence number 41. This is sentence number 42. This is sentence number 43. This is sentence number 44. This is sentence number 45. This is sentence number 46. This is sentence number 47. This is sentence number 48. This is sentence number 49. This is sentence number 50. This is sentence number 51. This is sentence number 52. This is sentence number 53. This is sentence number 54. This is sentence number 55. This is sentence number 56. This is sentence number 57. This is sentence number 58. This is sentence number 59. This is sentence number 60. This is sentence number 61. This is sentence number 62. This is sentence number 63. This is)</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_get_model_info_not_initialized" time="0.002"><failure message="KeyError: 'model_name'">tests/unit/test_embeddings.py:354: in test_get_model_info_not_initialized
    assert info["model_name"] == service.config.embedding.model
           ^^^^^^^^^^^^^^^^^^
E   KeyError: 'model_name'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_get_model_info_initialized" time="0.003"><failure message="AttributeError: &lt;workspace_qdrant_mcp.core.embeddings.EmbeddingService object at 0x7f8984934290&gt; does not have the attribute '_get_vector_size'">tests/unit/test_embeddings.py:366: in test_get_model_info_initialized
    with patch.object(service, "_get_vector_size", return_value=384):
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: &lt;workspace_qdrant_mcp.core.embeddings.EmbeddingService object at 0x7f8984934290&gt; does not have the attribute '_get_vector_size'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_get_vector_size_with_model" time="0.003"><failure message="AttributeError: 'EmbeddingService' object has no attribute '_get_vector_size'">tests/unit/test_embeddings.py:382: in test_get_vector_size_with_model
    size = service._get_vector_size()
           ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute '_get_vector_size'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_get_vector_size_no_model" time="0.002"><failure message="AttributeError: 'EmbeddingService' object has no attribute '_get_vector_size'">tests/unit/test_embeddings.py:391: in test_get_vector_size_no_model
    size = service._get_vector_size()
           ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute '_get_vector_size'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_get_vector_size_exception" time="0.003"><failure message="AttributeError: 'EmbeddingService' object has no attribute '_get_vector_size'">tests/unit/test_embeddings.py:400: in test_get_vector_size_exception
    size = service._get_vector_size()
           ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute '_get_vector_size'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_generate_cache_key" time="0.004"><failure message="AttributeError: 'EmbeddingService' object has no attribute '_generate_cache_key'">tests/unit/test_embeddings.py:410: in test_generate_cache_key
    key = service._generate_cache_key(text, include_sparse)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute '_generate_cache_key'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_text_preprocessing" time="0.003"><failure message="AttributeError: 'EmbeddingService' object has no attribute '_preprocess_text'">tests/unit/test_embeddings.py:436: in test_text_preprocessing
    processed = service._preprocess_text(text)
                ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute '_preprocess_text'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_text_preprocessing_empty" time="0.003"><failure message="AttributeError: 'EmbeddingService' object has no attribute '_preprocess_text'">tests/unit/test_embeddings.py:450: in test_text_preprocessing_empty
    processed = service._preprocess_text(text)
                ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'EmbeddingService' object has no attribute '_preprocess_text'</failure></testcase><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_close_cleanup" time="0.004" /><testcase classname="tests.unit.test_embeddings.TestEmbeddingService" name="test_context_manager_usage" time="0.004"><failure message="TypeError: 'EmbeddingService' object does not support the asynchronous context manager protocol">tests/unit/test_embeddings.py:475: in test_context_manager_usage
    async with EmbeddingService(config) as service:
E   TypeError: 'EmbeddingService' object does not support the asynchronous context manager protocol</failure></testcase><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_init_default_k" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_init_custom_k" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_fuse_rankings_empty_results" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_fuse_rankings_only_dense_results" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_fuse_rankings_only_sparse_results" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_fuse_rankings_both_results_no_overlap" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_fuse_rankings_both_results_with_overlap" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_fuse_rankings_with_weights" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestRRFFusionRanker" name="test_explain_fusion" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_init" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_dense_only" time="0.003" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_sparse_only" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_both_embeddings" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_with_filter" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_with_weights" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_weighted_sum_fusion" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_max_fusion" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_unknown_fusion_method" time="0.003" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_client_error" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_weighted_sum_fusion_normalization" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_max_fusion_logic" time="0.001" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_benchmark_fusion_methods" time="0.002" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_hybrid_search_limit_application" time="0.003" /><testcase classname="tests.unit.test_hybrid_search.TestHybridSearchEngine" name="test_rrf_score_calculation" time="0.001" /><testcase classname="tests.unit.test_ingestion_engine.TestIngestionStats" name="test_stats_initialization" time="0.001" /><testcase classname="tests.unit.test_ingestion_engine.TestIngestionStats" name="test_files_per_second_calculation" time="0.001" /><testcase classname="tests.unit.test_ingestion_engine.TestIngestionStats" name="test_success_rate_calculation" time="0.001" /><testcase classname="tests.unit.test_ingestion_engine.TestIngestionResult" name="test_result_creation" time="0.001" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_engine_initialization" time="0.003" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_find_files_recursive" time="0.005" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_find_files_non_recursive" time="0.004" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_find_files_with_format_filter" time="0.004" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_find_files_with_exclusions" time="0.005" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_process_directory_nonexistent" time="0.003" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_process_directory_no_files" time="0.004" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_process_directory_collection_not_found" time="0.005"><failure message="assert &quot;Collection 'missing-collection' not found&quot; in &quot;Batch ingestion failed: Mock object has no attribute 'collection_manager'&quot;&#10; +  where &quot;Batch ingestion failed: Mock object has no attribute 'collection_manager'&quot; = IngestionResult(success=False, stats=IngestionStats(files_found=1, files_processed=0, files_skipped=0, files_failed=0, total_documents=0, total_chunks=0, total_characters=0, total_words=0, start_time=datetime.datetime(2025, 8, 29, 17, 17, 35, 996378, tzinfo=datetime.timezone.utc), end_time=datetime.datetime(2025, 8, 29, 17, 17, 35, 996575, tzinfo=datetime.timezone.utc), processing_time=0.0, errors=[], skipped_files=[], duplicates_found=0), collection='missing-collection', message=&quot;Batch ingestion failed: Mock object has no attribute 'collection_manager'&quot;, dry_run=False).message">tests/unit/test_ingestion_engine.py:233: in test_process_directory_collection_not_found
    assert "Collection 'missing-collection' not found" in result.message
E   assert "Collection 'missing-collection' not found" in "Batch ingestion failed: Mock object has no attribute 'collection_manager'"
E    +  where "Batch ingestion failed: Mock object has no attribute 'collection_manager'" = IngestionResult(success=False, stats=IngestionStats(files_found=1, files_processed=0, files_skipped=0, files_failed=0, total_documents=0, total_chunks=0, total_characters=0, total_words=0, start_time=datetime.datetime(2025, 8, 29, 17, 17, 35, 996378, tzinfo=datetime.timezone.utc), end_time=datetime.datetime(2025, 8, 29, 17, 17, 35, 996575, tzinfo=datetime.timezone.utc), processing_time=0.0, errors=[], skipped_files=[], duplicates_found=0), collection='missing-collection', message="Batch ingestion failed: Mock object has no attribute 'collection_manager'", dry_run=False).message</failure></testcase><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_process_directory_successful" time="0.007" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_process_directory_dry_run" time="0.005" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_deduplication" time="0.008" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_processing_with_errors" time="0.005" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_progress_callback" time="0.006" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_find_parser" time="0.003" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_get_supported_formats" time="0.004" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_estimate_processing_time" time="0.005" /><testcase classname="tests.unit.test_ingestion_engine.TestDocumentIngestionEngine" name="test_concurrent_processing" time="0.107" /><testcase classname="tests.unit.test_ingestion_engine.TestIngestionEngineIntegration" name="test_full_processing_workflow" time="0.008" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_init_without_github_user" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_init_with_github_user" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_name_non_git_directory" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_name_git_directory_no_remote" time="0.026" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_name_git_with_github_user_match" time="0.023" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_name_git_with_github_user_no_match" time="0.027" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_name_git_no_github_user" time="0.025" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_name_git_error" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_subprojects_no_git" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_subprojects_no_submodules" time="0.023" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_subprojects_with_submodules_no_filter" time="0.025" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_subprojects_with_user_filtering" time="0.025" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_and_subprojects" time="0.026" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_https" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_ssh" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_non_github" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_no_git_suffix" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_invalid" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_empty" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_belongs_to_user_github_match" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_belongs_to_user_github_no_match" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_belongs_to_user_no_github_user_configured" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_belongs_to_user_non_github" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_extract_repo_name_from_remote" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_find_git_root_valid_repo" time="0.026" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_find_git_root_non_git_directory" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_find_git_root_subdirectory" time="0.023" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_git_remote_url_with_origin" time="0.022" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_git_remote_url_no_origin" time="0.027" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_git_remote_url_no_remotes" time="0.032" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_info_comprehensive" time="0.035" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_info_non_git_directory" time="0.002" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_get_project_info_with_error" time="0.003" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_detailed_submodules_analysis" time="0.025" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_parametrized[https://github.com/user/repo.git-expected_components0]" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_parametrized[git@github.com:user/repo.git-expected_components1]" time="0.001" /><testcase classname="tests.unit.test_project_detection.TestProjectDetector" name="test_parse_git_url_parametrized[https://gitlab.com/user/repo-expected_components2]" time="0.001" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_init" time="0.016" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_client_not_initialized" time="0.013" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_empty_content" time="0.016" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_collection_not_found" time="0.015"><failure message="assert &quot;Scratchbook collection 'test-project-scratchbook' not found&quot; in &quot;Scratchbook collection 'test-project-project' not found&quot;">tests/unit/test_scratchbook.py:75: in test_add_note_collection_not_found
    assert (
E   assert "Scratchbook collection 'test-project-scratchbook' not found" in "Scratchbook collection 'test-project-project' not found"</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_success" time="0.015"><failure message="assert 'note_id' in {'error': &quot;Scratchbook collection 'test-project-project' not found&quot;}">tests/unit/test_scratchbook.py:102: in test_add_note_success
    assert "note_id" in result
E   assert 'note_id' in {'error': "Scratchbook collection 'test-project-project' not found"}</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_auto_title_generation" time="0.013"><failure message="KeyError: 'title'">tests/unit/test_scratchbook.py:143: in test_add_note_auto_title_generation
    assert result["title"] == "Auto Title"
           ^^^^^^^^^^^^^^^
E   KeyError: 'title'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_default_project" time="0.013"><failure message="KeyError: 'collection'">tests/unit/test_scratchbook.py:166: in test_add_note_default_project
    assert result["collection"] == "default-scratchbook"
           ^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'collection'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_custom_project" time="0.014"><failure message="KeyError: 'collection'">tests/unit/test_scratchbook.py:187: in test_add_note_custom_project
    assert result["collection"] == "custom-project-scratchbook"
           ^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'collection'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_no_sparse_vectors" time="0.019"><failure message="TypeError: 'NoneType' object is not subscriptable">tests/unit/test_scratchbook.py:206: in test_add_note_no_sparse_vectors
    point = call_args[1]["points"][0]
            ^^^^^^^^^^^^
E   TypeError: 'NoneType' object is not subscriptable</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_add_note_exception_handling" time="0.013" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_generate_title_from_content_short" time="0.013" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_generate_title_from_content_long" time="0.015" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_generate_title_from_content_multiline" time="0.014" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_update_note_client_not_initialized" time="0.015" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_update_note_not_found" time="0.015" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_update_note_success_metadata_only" time="0.014"><failure message="KeyError: 'note_id'">tests/unit/test_scratchbook.py:296: in test_update_note_success_metadata_only
    assert result["note_id"] == "note123"
           ^^^^^^^^^^^^^^^^^
E   KeyError: 'note_id'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_update_note_with_content" time="0.016"><failure message="KeyError: 'metadata_updated'">tests/unit/test_scratchbook.py:341: in test_update_note_with_content
    assert result["metadata_updated"] is True
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'metadata_updated'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_search_notes_client_not_initialized" time="0.012" /><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_search_notes_collection_not_found" time="0.015"><failure message="assert &quot;Scratchbook collection 'test-project-scratchbook' not found&quot; in &quot;Scratchbook collection 'test-project-project' not found&quot;">tests/unit/test_scratchbook.py:368: in test_search_notes_collection_not_found
    assert (
E   assert "Scratchbook collection 'test-project-scratchbook' not found" in "Scratchbook collection 'test-project-project' not found"</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_search_notes_success" time="0.013"><failure message="AttributeError: &lt;module 'workspace_qdrant_mcp.tools.scratchbook' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/tools/scratchbook.py'&gt; does not have the attribute 'HybridSearchEngine'">tests/unit/test_scratchbook.py:411: in test_search_notes_success
    with patch(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'workspace_qdrant_mcp.tools.scratchbook' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/tools/scratchbook.py'&gt; does not have the attribute 'HybridSearchEngine'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_search_notes_with_filters" time="0.013"><failure message="AttributeError: &lt;module 'workspace_qdrant_mcp.tools.scratchbook' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/tools/scratchbook.py'&gt; does not have the attribute 'HybridSearchEngine'">tests/unit/test_scratchbook.py:448: in test_search_notes_with_filters
    with patch(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'workspace_qdrant_mcp.tools.scratchbook' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/tools/scratchbook.py'&gt; does not have the attribute 'HybridSearchEngine'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_list_notes_success" time="0.014"><failure message="assert 'notes' in {'error': &quot;Failed to list notes: '&lt;' not supported between instances of 'NoneType' and 'NoneType'&quot;}">tests/unit/test_scratchbook.py:490: in test_list_notes_success
    assert "notes" in result
E   assert 'notes' in {'error': "Failed to list notes: '&lt;' not supported between instances of 'NoneType' and 'NoneType'"}</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_delete_note_success" time="0.014"><failure message="KeyError: 'status'">tests/unit/test_scratchbook.py:524: in test_delete_note_success
    assert result["status"] == "success"
           ^^^^^^^^^^^^^^^^
E   KeyError: 'status'</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestScratchbookManager" name="test_delete_note_not_found" time="0.015"><failure message="AssertionError: assert 'error' in {'note_id': 'nonexistent_note', 'collection': 'test-project-project', 'deleted': True, 'operation_id': &lt;MagicMock name='mock.client.delete().operation_id' id='140228630899088'&gt;}">tests/unit/test_scratchbook.py:544: in test_delete_note_not_found
    assert "error" in result
E   AssertionError: assert 'error' in {'note_id': 'nonexistent_note', 'collection': 'test-project-project', 'deleted': True, 'operation_id': &lt;MagicMock name='mock.client.delete().operation_id' id='140228630899088'&gt;}</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestUpdateScratchbook" name="test_update_scratchbook_client_not_initialized" time="0.015" /><testcase classname="tests.unit.test_scratchbook.TestUpdateScratchbook" name="test_update_scratchbook_add_new_note" time="0.015"><failure message="TypeError: object dict can't be used in 'await' expression">tests/unit/test_scratchbook.py:579: in test_update_scratchbook_add_new_note
    result = await update_scratchbook(
src/workspace_qdrant_mcp/tools/scratchbook.py:659: in update_scratchbook
    return await manager.add_note(content, title, tags, note_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: object dict can't be used in 'await' expression</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestUpdateScratchbook" name="test_update_scratchbook_update_existing_note" time="0.014"><failure message="TypeError: object dict can't be used in 'await' expression">tests/unit/test_scratchbook.py:607: in test_update_scratchbook_update_existing_note
    result = await update_scratchbook(
src/workspace_qdrant_mcp/tools/scratchbook.py:657: in update_scratchbook
    return await manager.update_note(note_id, content, title, tags)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   TypeError: object dict can't be used in 'await' expression</failure></testcase><testcase classname="tests.unit.test_scratchbook.TestUpdateScratchbook" name="test_update_scratchbook_exception_handling" time="0.014"><failure message="Exception: Manager error">tests/unit/test_scratchbook.py:632: in test_update_scratchbook_exception_handling
    result = await update_scratchbook(mock_workspace_client, "Test content")
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
src/workspace_qdrant_mcp/tools/scratchbook.py:654: in update_scratchbook
    manager = ScratchbookManager(client)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1124: in __call__
    return self._mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1128: in _mock_call
    return self._execute_mock_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1183: in _execute_mock_call
    raise effect
E   Exception: Manager error</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_client_not_initialized" time="0.012" /><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_empty_query" time="0.013"><failure message="AssertionError: assert 'error' in {'query': '', 'mode': 'hybrid', 'collections_searched': ['test_collection'], 'total_results': 2, 'results': [{'id': 'test_id_1', 'score': 0.03278688524590164, 'payload': {'content': 'Test document 1', 'source': 'test'}, 'search_type': 'hybrid', 'collection': 'test_collection'}, {'id': 'test_id_2', 'score': 0.03225806451612903, 'payload': {'content': 'Test document 2', 'source': 'test'}, 'search_type': 'hybrid', 'collection': 'test_collection'}]}">tests/unit/test_search.py:37: in test_search_workspace_empty_query
    assert "error" in result
E   AssertionError: assert 'error' in {'query': '', 'mode': 'hybrid', 'collections_searched': ['test_collection'], 'total_results': 2, 'results': [{'id': 'test_id_1', 'score': 0.03278688524590164, 'payload': {'content': 'Test document 1', 'source': 'test'}, 'search_type': 'hybrid', 'collection': 'test_collection'}, {'id': 'test_id_2', 'score': 0.03225806451612903, 'payload': {'content': 'Test document 2', 'source': 'test'}, 'search_type': 'hybrid', 'collection': 'test_collection'}]}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_no_collections_available" time="0.014"><failure message="AssertionError: assert 'error' in {'query': 'test query', 'mode': 'hybrid', 'collections_searched': [], 'total_results': 0, 'results': []}">tests/unit/test_search.py:56: in test_search_workspace_no_collections_available
    assert "error" in result
E   AssertionError: assert 'error' in {'query': 'test query', 'mode': 'hybrid', 'collections_searched': [], 'total_results': 0, 'results': []}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_collections_not_found" time="0.014" /><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_hybrid_success" time="0.015"><failure message="AssertionError: assert 'total' in {'query': 'test query', 'mode': 'hybrid', 'collections_searched': ['docs', 'references'], 'total_results': 0, 'results': []}">tests/unit/test_search.py:119: in test_search_workspace_hybrid_success
    assert "total" in result
E   AssertionError: assert 'total' in {'query': 'test query', 'mode': 'hybrid', 'collections_searched': ['docs', 'references'], 'total_results': 0, 'results': []}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_specific_collections" time="0.015"><failure message="AssertionError: assert 0 == 2&#10; +  where 0 = &lt;MagicMock name='HybridSearchEngine().hybrid_search' id='140228629501328'&gt;.call_count&#10; +    where &lt;MagicMock name='HybridSearchEngine().hybrid_search' id='140228629501328'&gt; = &lt;MagicMock name='HybridSearchEngine()' id='140228635072784'&gt;.hybrid_search">tests/unit/test_search.py:172: in test_search_workspace_specific_collections
    assert mock_engine.hybrid_search.call_count == 2
E   AssertionError: assert 0 == 2
E    +  where 0 = &lt;MagicMock name='HybridSearchEngine().hybrid_search' id='140228629501328'&gt;.call_count
E    +    where &lt;MagicMock name='HybridSearchEngine().hybrid_search' id='140228629501328'&gt; = &lt;MagicMock name='HybridSearchEngine()' id='140228635072784'&gt;.hybrid_search</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_dense_mode" time="0.013"><failure message="KeyError: 'search_params'">tests/unit/test_search.py:201: in test_search_workspace_dense_mode
    assert result["search_params"]["mode"] == "dense"
           ^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'search_params'</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_sparse_mode" time="0.014"><failure message="KeyError: 'search_params'">tests/unit/test_search.py:238: in test_search_workspace_sparse_mode
    assert result["search_params"]["mode"] == "sparse"
           ^^^^^^^^^^^^^^^^^^^^^^^
E   KeyError: 'search_params'</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_no_sparse_embeddings_sparse_mode" time="0.013"><failure message="AssertionError: assert 'error' in {'query': 'test query', 'mode': 'sparse', 'collections_searched': ['docs'], 'total_results': 0, 'results': []}">tests/unit/test_search.py:265: in test_search_workspace_no_sparse_embeddings_sparse_mode
    assert "error" in result
E   AssertionError: assert 'error' in {'query': 'test query', 'mode': 'sparse', 'collections_searched': ['docs'], 'total_results': 0, 'results': []}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_results_filtering_by_threshold" time="0.014"><failure message="AssertionError: assert 3 == 2&#10; +  where 3 = len([{'id': 'doc1', 'score': 0.9, 'payload': {'content': 'High score'}, 'search_type': 'dense', 'collection': 'docs'}, {'id': 'doc3', 'score': 0.8, 'payload': {'content': 'Medium score'}, 'search_type': 'dense', 'collection': 'docs'}, {'id': 'doc2', 'score': 0.6, 'payload': {'content': 'Low score'}, 'search_type': 'dense', 'collection': 'docs'}])">tests/unit/test_search.py:302: in test_search_workspace_results_filtering_by_threshold
    assert len(result["results"]) == 2  # Only doc1 and doc3
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AssertionError: assert 3 == 2
E    +  where 3 = len([{'id': 'doc1', 'score': 0.9, 'payload': {'content': 'High score'}, 'search_type': 'dense', 'collection': 'docs'}, {'id': 'doc3', 'score': 0.8, 'payload': {'content': 'Medium score'}, 'search_type': 'dense', 'collection': 'docs'}, {'id': 'doc2', 'score': 0.6, 'payload': {'content': 'Low score'}, 'search_type': 'dense', 'collection': 'docs'}])</failure></testcase><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_results_sorted_by_score" time="0.014" /><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_limit_enforcement" time="0.014" /><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_exception_handling" time="0.013" /><testcase classname="tests.unit.test_search.TestSearchWorkspace" name="test_search_workspace_invalid_mode" time="0.014"><failure message="AssertionError: assert 'error' in {'query': 'test query', 'mode': 'invalid_mode', 'collections_searched': ['docs'], 'total_results': 0, 'results': []}">tests/unit/test_search.py:402: in test_search_workspace_invalid_mode
    assert "error" in result
E   AssertionError: assert 'error' in {'query': 'test query', 'mode': 'invalid_mode', 'collections_searched': ['docs'], 'total_results': 0, 'results': []}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_client_not_initialized" time="0.013" /><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_collection_not_found" time="0.013" /><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_empty_filter" time="0.015"><failure message="AssertionError: assert 'error' in {'collection': 'docs', 'filter': {}, 'total_results': 0, 'results': []}">tests/unit/test_search.py:443: in test_search_by_metadata_empty_filter
    assert "error" in result
E   AssertionError: assert 'error' in {'collection': 'docs', 'filter': {}, 'total_results': 0, 'results': []}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_success" time="0.014"><failure message="AssertionError: assert 'total' in {'collection': 'docs', 'filter': {'category': 'python'}, 'total_results': 2, 'results': [{'id': 'doc1', 'payload': {'content': 'Python programming guide', 'category': 'python', 'difficulty': 'beginner'}}, {'id': 'doc2', 'payload': {'content': 'Advanced Python concepts', 'category': 'python', 'difficulty': 'advanced'}}]}">tests/unit/test_search.py:481: in test_search_by_metadata_success
    assert "total" in result
E   AssertionError: assert 'total' in {'collection': 'docs', 'filter': {'category': 'python'}, 'total_results': 2, 'results': [{'id': 'doc1', 'payload': {'content': 'Python programming guide', 'category': 'python', 'difficulty': 'beginner'}}, {'id': 'doc2', 'payload': {'content': 'Advanced Python concepts', 'category': 'python', 'difficulty': 'advanced'}}]}</failure></testcase><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_multiple_filters" time="0.013" /><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_list_values" time="0.013" /><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_no_results" time="0.014"><failure message="KeyError: 'total'">tests/unit/test_search.py:559: in test_search_by_metadata_no_results
    assert result["total"] == 0
           ^^^^^^^^^^^^^^^
E   KeyError: 'total'</failure></testcase><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_limit_enforcement" time="0.018"><failure message="AssertionError: assert 10 == 5&#10; +  where 10 = len([{'id': 'doc0', 'payload': {'content': 'Doc 0', 'category': 'python'}}, {'id': 'doc1', 'payload': {'content': 'Doc 1', 'category': 'python'}}, {'id': 'doc2', 'payload': {'content': 'Doc 2', 'category': 'python'}}, {'id': 'doc3', 'payload': {'content': 'Doc 3', 'category': 'python'}}, {'id': 'doc4', 'payload': {'content': 'Doc 4', 'category': 'python'}}, {'id': 'doc5', 'payload': {'content': 'Doc 5', 'category': 'python'}}, {'id': 'doc6', 'payload': {'content': 'Doc 6', 'category': 'python'}}, {'id': 'doc7', 'payload': {'content': 'Doc 7', 'category': 'python'}}, {'id': 'doc8', 'payload': {'content': 'Doc 8', 'category': 'python'}}, {'id': 'doc9', 'payload': {'content': 'Doc 9', 'category': 'python'}}])">tests/unit/test_search.py:584: in test_search_by_metadata_limit_enforcement
    assert len(result["results"]) == 5
E   AssertionError: assert 10 == 5
E    +  where 10 = len([{'id': 'doc0', 'payload': {'content': 'Doc 0', 'category': 'python'}}, {'id': 'doc1', 'payload': {'content': 'Doc 1', 'category': 'python'}}, {'id': 'doc2', 'payload': {'content': 'Doc 2', 'category': 'python'}}, {'id': 'doc3', 'payload': {'content': 'Doc 3', 'category': 'python'}}, {'id': 'doc4', 'payload': {'content': 'Doc 4', 'category': 'python'}}, {'id': 'doc5', 'payload': {'content': 'Doc 5', 'category': 'python'}}, {'id': 'doc6', 'payload': {'content': 'Doc 6', 'category': 'python'}}, {'id': 'doc7', 'payload': {'content': 'Doc 7', 'category': 'python'}}, {'id': 'doc8', 'payload': {'content': 'Doc 8', 'category': 'python'}}, {'id': 'doc9', 'payload': {'content': 'Doc 9', 'category': 'python'}}])</failure></testcase><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_exception_handling" time="0.014" /><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_special_characters" time="0.015" /><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_numeric_values" time="0.015"><failure message="AssertionError: Expected 'scroll' to have been called once. Called 0 times.">/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:918: in assert_called_once
    raise AssertionError(msg)
E   AssertionError: Expected 'scroll' to have been called once. Called 0 times.

During handling of the above exception, another exception occurred:
tests/unit/test_search.py:638: in test_search_by_metadata_numeric_values
    mock_client.scroll.assert_called_once()
E   AssertionError: Expected 'scroll' to have been called once. Called 0 times.</failure></testcase><testcase classname="tests.unit.test_search.TestSearchCollectionByMetadata" name="test_search_by_metadata_boolean_values" time="0.013" /><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_init_basic" time="0.001"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'sparse_model'">tests/unit/test_sparse_vectors.py:36: in test_init_basic
    assert encoder_basic.sparse_model is None
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'sparse_model'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_init_fastembed" time="0.001"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'sparse_model'">tests/unit/test_sparse_vectors.py:45: in test_init_fastembed
    assert encoder_fastembed.sparse_model is None
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'sparse_model'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_initialize_fastembed_success" time="0.004"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'sparse_model'">tests/unit/test_sparse_vectors.py:66: in test_initialize_fastembed_success
    assert encoder_fastembed.sparse_model == mock_model
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'sparse_model'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_initialize_fastembed_failure" time="0.004"><failure message="Failed: DID NOT RAISE &lt;class 'RuntimeError'&gt;">tests/unit/test_sparse_vectors.py:82: in test_initialize_fastembed_failure
    with pytest.raises(
E   Failed: DID NOT RAISE &lt;class 'RuntimeError'&gt;</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_initialize_basic_with_corpus" time="0.002"><failure message="ModuleNotFoundError: No module named 'sklearn'">tests/unit/test_sparse_vectors.py:98: in test_initialize_basic_with_corpus
    with (
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1430: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;frozen importlib._bootstrap&gt;:1204: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:1176: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:1140: in _find_and_load_unlocked
    ???
E   ModuleNotFoundError: No module named 'sklearn'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_initialize_basic_no_corpus" time="0.002"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'vectorizer'">tests/unit/test_sparse_vectors.py:133: in test_initialize_basic_no_corpus
    assert encoder_basic.vectorizer is None
           ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'vectorizer'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_initialize_already_initialized" time="0.002"><failure message="ModuleNotFoundError: No module named 'sklearn'">tests/unit/test_sparse_vectors.py:141: in test_initialize_already_initialized
    with patch(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1430: in __enter__
    self.target = self.getter()
                  ^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/pkgutil.py:700: in resolve_name
    mod = importlib.import_module(modname)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
&lt;frozen importlib._bootstrap&gt;:1204: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:1176: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:1140: in _find_and_load_unlocked
    ???
E   ModuleNotFoundError: No module named 'sklearn'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_not_initialized" time="0.001"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'">tests/unit/test_sparse_vectors.py:154: in test_encode_not_initialized
    encoder_basic.encode("test text")
    ^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_fastembed_success" time="0.002"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'">tests/unit/test_sparse_vectors.py:168: in test_encode_fastembed_success
    result = encoder_fastembed.encode("test text")
             ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_fastembed_empty_result" time="0.002"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'">tests/unit/test_sparse_vectors.py:183: in test_encode_fastembed_empty_result
    result = encoder_fastembed.encode("test text")
             ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_basic_with_bm25" time="0.002"><failure message="AttributeError: &lt;module 'workspace_qdrant_mcp.core.sparse_vectors' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/core/sparse_vectors.py'&gt; does not have the attribute 'word_tokenize'">tests/unit/test_sparse_vectors.py:198: in test_encode_basic_with_bm25
    with patch(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'workspace_qdrant_mcp.core.sparse_vectors' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/core/sparse_vectors.py'&gt; does not have the attribute 'word_tokenize'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_basic_no_bm25" time="0.001"><failure message="AttributeError: &lt;module 'workspace_qdrant_mcp.core.sparse_vectors' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/core/sparse_vectors.py'&gt; does not have the attribute 'word_tokenize'">tests/unit/test_sparse_vectors.py:216: in test_encode_basic_no_bm25
    with patch(
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1446: in __enter__
    original, local = self.get_original()
                      ^^^^^^^^^^^^^^^^^^^
/opt/hostedtoolcache/Python/3.11.13/x64/lib/python3.11/unittest/mock.py:1419: in get_original
    raise AttributeError(
E   AttributeError: &lt;module 'workspace_qdrant_mcp.core.sparse_vectors' from '/home/runner/work/workspace-qdrant-mcp/workspace-qdrant-mcp/src/workspace_qdrant_mcp/core/sparse_vectors.py'&gt; does not have the attribute 'word_tokenize'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_empty_text" time="0.002"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'">tests/unit/test_sparse_vectors.py:234: in test_encode_empty_text
    result = encoder_fastembed.encode("")
             ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_encode_exception_handling" time="0.002"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'">tests/unit/test_sparse_vectors.py:246: in test_encode_exception_handling
    encoder_fastembed.encode("test text")
    ^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'encode'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_get_vocabulary_fastembed" time="0.001"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'get_vocabulary'">tests/unit/test_sparse_vectors.py:253: in test_get_vocabulary_fastembed
    vocab = encoder_fastembed.get_vocabulary()
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'get_vocabulary'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_get_vocabulary_basic" time="0.001"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'get_vocabulary'">tests/unit/test_sparse_vectors.py:263: in test_get_vocabulary_basic
    vocab = encoder_basic.get_vocabulary()
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'get_vocabulary'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestBM25SparseEncoder" name="test_get_vocabulary_not_initialized" time="0.001"><failure message="AttributeError: 'BM25SparseEncoder' object has no attribute 'get_vocabulary'">tests/unit/test_sparse_vectors.py:271: in test_get_vocabulary_not_initialized
    vocab = encoder_basic.get_vocabulary()
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
E   AttributeError: 'BM25SparseEncoder' object has no attribute 'get_vocabulary'</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestSparseVectorUtilities" name="test_create_qdrant_sparse_vector" time="0.001" /><testcase classname="tests.unit.test_sparse_vectors.TestSparseVectorUtilities" name="test_create_qdrant_sparse_vector_empty" time="0.001" /><testcase classname="tests.unit.test_sparse_vectors.TestSparseVectorUtilities" name="test_create_qdrant_sparse_vector_mismatched_lengths" time="0.001"><failure message="Failed: DID NOT RAISE &lt;class 'ValueError'&gt;">tests/unit/test_sparse_vectors.py:303: in test_create_qdrant_sparse_vector_mismatched_lengths
    with pytest.raises(
E   Failed: DID NOT RAISE &lt;class 'ValueError'&gt;</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestSparseVectorUtilities" name="test_create_named_sparse_vector" time="0.001"><failure message="AssertionError: assert False&#10; +  where False = isinstance(NamedSparseVector(name='sparse_vector', vector=SparseVector(indices=[1, 5, 10], values=[0.8, 0.6, 0.9])), dict)">tests/unit/test_sparse_vectors.py:316: in test_create_named_sparse_vector
    assert isinstance(result, dict)
E   AssertionError: assert False
E    +  where False = isinstance(NamedSparseVector(name='sparse_vector', vector=SparseVector(indices=[1, 5, 10], values=[0.8, 0.6, 0.9])), dict)</failure></testcase><testcase classname="tests.unit.test_sparse_vectors.TestSparseVectorUtilities" name="test_create_named_sparse_vector_default_name" time="0.003"><failure message="AssertionError: assert 'sparse' in NamedSparseVector(name='sparse', vector=SparseVector(indices=[1, 2, 3], values=[0.5, 0.7, 0.9]))">tests/unit/test_sparse_vectors.py:329: in test_create_named_sparse_vector_default_name
    assert "sparse" in result
E   AssertionError: assert 'sparse' in NamedSparseVector(name='sparse', vector=SparseVector(indices=[1, 2, 3], values=[0.5, 0.7, 0.9]))</failure></testcase></testsuite></testsuites>