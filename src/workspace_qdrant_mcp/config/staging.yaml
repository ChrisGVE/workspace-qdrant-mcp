# Staging Environment Configuration
# This configuration mirrors production but with relaxed settings for testing

# Server settings - production-like but with debug info
server:
  host: "0.0.0.0"
  port: 8000
  debug: false
  reload: false
  log_level: "INFO"

# Qdrant database connection - staging instance
qdrant:
  url: "${QDRANT_URL:-http://qdrant-staging:6333}"
  api_key: "${QDRANT_API_KEY}"
  timeout: 30
  prefer_grpc: true
  health_check_interval: 30
  retry_attempts: 3

# Embedding configuration - production settings with monitoring
embedding:
  model: "${EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}"
  enable_sparse_vectors: true
  chunk_size: 800
  chunk_overlap: 120
  batch_size: 50
  cache_embeddings: false
  embedding_timeout: 60

# Workspace settings - staging environment
workspace:
  collection_suffixes: []
  global_collections: []
  github_user: "${GITHUB_USER}"
  collection_prefix: "staging_"
  max_collections: 100
  auto_create_collections: false
  cleanup_on_exit: false

# Staging-specific features
staging:
  performance_monitoring: true
  error_tracking: true
  request_logging: true
  health_checks: true
  backup_enabled: true

# Security settings - production-ready
security:
  mask_sensitive_logs: true
  validate_ssl: true
  allow_http: false
  cors_enabled: true
  cors_origins: ["https://staging.example.com"]
  rate_limiting: true
  max_requests_per_minute: 1000

# Monitoring and observability
monitoring:
  metrics_enabled: true
  tracing_enabled: true
  health_endpoint: "/health"
  metrics_endpoint: "/metrics"
  log_structured: true