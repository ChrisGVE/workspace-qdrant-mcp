[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "workspace-qdrant-mcp"
version = "0.1.0"
description = "Project-scoped Qdrant MCP server with scratchbook functionality"
authors = [
    {name = "Chris", email = "chris@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
dependencies = [
    "fastmcp>=0.3.0",
    "qdrant-client>=1.7.0",
    "fastembed>=0.2.0",
    "GitPython>=3.1.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "python-dotenv>=1.0.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "chardet>=5.0.0",
    "PyPDF2>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.0",
    "pytest-timeout>=2.1.0",
    "pytest-benchmark>=4.0.0",
    "httpx>=0.24.0",
    "respx>=0.20.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]
full = [
    "markdown>=3.4.0",
    "PyYAML>=6.0.0",
    "pypdf>=4.0.0",
]

[project.scripts]
workspace-qdrant-mcp = "workspace_qdrant_mcp.server:main"
wqutil = "workspace_qdrant_mcp.utils.admin_cli:admin_cli"
workspace-qdrant-validate = "workspace_qdrant_mcp.utils.config_validator:validate_config_cli"
workspace-qdrant-admin = "workspace_qdrant_mcp.utils.admin_cli:admin_cli"
workspace-qdrant-ingest = "workspace_qdrant_mcp.cli.ingest:main"

[project.urls]
Homepage = "https://github.com/ChrisGVE/workspace-qdrant-mcp"
Repository = "https://github.com/ChrisGVE/workspace-qdrant-mcp"
Issues = "https://github.com/ChrisGVE/workspace-qdrant-mcp/issues"
Changelog = "https://github.com/ChrisGVE/workspace-qdrant-mcp/blob/main/CHANGELOG.md"

[tool.hatch.version]
path = "src/workspace_qdrant_mcp/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/workspace_qdrant_mcp"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.ruff]
target-version = "py39"
line-length = 88
select = ["E", "F", "W", "B", "I", "N", "UP", "S", "C90", "PL"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
addopts = "-v --tb=short --cov=src/workspace_qdrant_mcp --cov-report=term-missing --cov-report=html --cov-fail-under=80"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "requires_qdrant: Tests requiring Qdrant server",
    "requires_git: Tests requiring Git repository",
]
timeout = 300
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/conftest.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "pass",
]

[tool.coverage.html]
directory = "htmlcov"