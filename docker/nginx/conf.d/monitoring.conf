# Monitoring endpoints configuration for Nginx
# Separate server blocks for monitoring services

# Grafana server
server {
    listen 443 ssl http2;
    server_name grafana.* monitoring.*;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Security headers for monitoring
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location / {
        proxy_pass http://grafana_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # Grafana WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Grafana API
    location /api/ {
        limit_req zone=api burst=30 nodelay;
        
        proxy_pass http://grafana_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}

# Prometheus server
server {
    listen 443 ssl http2;
    server_name prometheus.* metrics.*;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Basic authentication for Prometheus
    auth_basic "Prometheus Admin";
    auth_basic_user_file /etc/nginx/.htpasswd;

    location / {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://prometheus_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Prometheus timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable buffering for metrics scraping
        proxy_buffering off;
    }

    # Metrics endpoint (no auth required for scraping)
    location /metrics {
        access_log off;
        auth_basic off;
        
        proxy_pass http://prometheus_backend;
        proxy_set_header Host $host;
        
        # Quick metrics response
        proxy_connect_timeout 3s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # Allow only internal networks
        allow 172.20.0.0/16;
        allow 172.21.0.0/16;
        allow 172.22.0.0/16;
        deny all;
    }
}

# Qdrant database access (admin only)
server {
    listen 443 ssl http2;
    server_name qdrant.* vector.*;

    # SSL certificates
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # Basic authentication for Qdrant admin
    auth_basic "Qdrant Admin";
    auth_basic_user_file /etc/nginx/.htpasswd;

    location / {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://qdrant_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Qdrant timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        
        # Large request support for vector uploads
        client_max_body_size 500m;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Health check endpoint (no auth required)
    location /health {
        access_log off;
        auth_basic off;
        
        proxy_pass http://qdrant_backend/health;
        proxy_set_header Host $host;
        
        # Quick health response
        proxy_connect_timeout 3s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Metrics endpoint (no auth required for monitoring)
    location /metrics {
        access_log off;
        auth_basic off;
        
        proxy_pass http://qdrant_backend/metrics;
        proxy_set_header Host $host;
        
        # Allow only internal networks
        allow 172.20.0.0/16;
        allow 172.21.0.0/16;
        allow 172.22.0.0/16;
        deny all;
    }
}