# RBAC configuration for Workspace Qdrant MCP
# ServiceAccount, Roles, and RoleBindings for secure access

# Service Account for the main application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: workspace-qdrant-mcp
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: serviceaccount
automountServiceAccountToken: true

---
# Role for application-specific permissions
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: workspace-qdrant-mcp
  name: workspace-qdrant-mcp-role
  labels:
    app: workspace-qdrant-mcp
    component: rbac
rules:
# ConfigMaps access for configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Secrets access for sensitive configuration
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Pods access for health checking and metrics
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]
# Services access for service discovery
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
# Events access for logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
# Endpoints access for service discovery
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get", "list", "watch"]

---
# RoleBinding to connect ServiceAccount with Role
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: workspace-qdrant-mcp-rolebinding
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: rbac
subjects:
- kind: ServiceAccount
  name: workspace-qdrant-mcp
  namespace: workspace-qdrant-mcp
roleRef:
  kind: Role
  name: workspace-qdrant-mcp-role
  apiGroup: rbac.authorization.k8s.io

---
# Service Account for monitoring components
apiVersion: v1
kind: ServiceAccount
metadata:
  name: monitoring
  namespace: workspace-qdrant-mcp
  labels:
    app: monitoring
    component: serviceaccount
automountServiceAccountToken: true

---
# ClusterRole for monitoring (needs cluster-wide access for metrics)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: monitoring-cluster-role
  labels:
    app: monitoring
    component: rbac
rules:
# Nodes access for node metrics
- apiGroups: [""]
  resources: ["nodes", "nodes/proxy", "nodes/metrics"]
  verbs: ["get", "list", "watch"]
# Pods access for pod metrics
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
# Services access for service metrics
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
# Namespaces access for namespace discovery
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list", "watch"]
# ConfigMaps access for configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Ingress access for ingress metrics
- apiGroups: ["networking.k8s.io", "extensions"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]

---
# ClusterRoleBinding for monitoring
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: monitoring-cluster-rolebinding
  labels:
    app: monitoring
    component: rbac
subjects:
- kind: ServiceAccount
  name: monitoring
  namespace: workspace-qdrant-mcp
roleRef:
  kind: ClusterRole
  name: monitoring-cluster-role
  apiGroup: rbac.authorization.k8s.io

---
# Service Account for backup operations
apiVersion: v1
kind: ServiceAccount
metadata:
  name: backup
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: backup
automountServiceAccountToken: true

---
# Role for backup operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: workspace-qdrant-mcp
  name: backup-role
  labels:
    app: workspace-qdrant-mcp
    component: backup
rules:
# Pods access for backup initiation
- apiGroups: [""]
  resources: ["pods", "pods/exec"]
  verbs: ["get", "list", "create"]
# Secrets access for backup credentials
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
# ConfigMaps access for backup configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
# PVC access for backup storage
- apiGroups: [""]
  resources: ["persistentvolumeclaims"]
  verbs: ["get", "list"]
# Events access for backup logging
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
# RoleBinding for backup operations
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: backup-rolebinding
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: backup
subjects:
- kind: ServiceAccount
  name: backup
  namespace: workspace-qdrant-mcp
roleRef:
  kind: Role
  name: backup-role
  apiGroup: rbac.authorization.k8s.io

---
# Service Account for deployment operations (CI/CD)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: deployer
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: deployment
automountServiceAccountToken: false  # Tokens will be provided externally for CI/CD

---
# Role for deployment operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: workspace-qdrant-mcp
  name: deployer-role
  labels:
    app: workspace-qdrant-mcp
    component: deployment
rules:
# Deployments management
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
# Services management
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# ConfigMaps management
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Secrets management (limited)
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "create", "update", "patch"]
# Ingress management
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# HPA management
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch", "create", "update", "patch"]
# Pods access for status checking
- apiGroups: [""]
  resources: ["pods", "pods/log"]
  verbs: ["get", "list", "watch"]
# Events access for deployment tracking
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

---
# RoleBinding for deployment operations
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: deployer-rolebinding
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: deployment
subjects:
- kind: ServiceAccount
  name: deployer
  namespace: workspace-qdrant-mcp
roleRef:
  kind: Role
  name: deployer-role
  apiGroup: rbac.authorization.k8s.io

---
# Service Account for read-only access (monitoring, debugging)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: readonly
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: readonly
automountServiceAccountToken: true

---
# Role for read-only access
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: workspace-qdrant-mcp
  name: readonly-role
  labels:
    app: workspace-qdrant-mcp
    component: readonly
rules:
# Read-only access to most resources
- apiGroups: [""]
  resources: ["pods", "pods/log", "services", "endpoints", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["get", "list", "watch"]
# Limited secrets access (no sensitive data)
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["list"]
  resourceNames: [] # Can list but not read content

---
# RoleBinding for read-only access
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: readonly-rolebinding
  namespace: workspace-qdrant-mcp
  labels:
    app: workspace-qdrant-mcp
    component: readonly
subjects:
- kind: ServiceAccount
  name: readonly
  namespace: workspace-qdrant-mcp
roleRef:
  kind: Role
  name: readonly-role
  apiGroup: rbac.authorization.k8s.io

---
# Security Context Constraints (for OpenShift)
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: workspace-qdrant-mcp-scc
  labels:
    app: workspace-qdrant-mcp
    component: security
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowedCapabilities: []
defaultAddCapabilities: []
requiredDropCapabilities:
- ALL
fsGroup:
  type: MustRunAs
  ranges:
  - min: 1000
  - max: 65534
runAsUser:
  type: MustRunAsRange
  uidRangeMin: 1000
  uidRangeMax: 65534
seLinuxContext:
  type: MustRunAs
users:
- system:serviceaccount:workspace-qdrant-mcp:workspace-qdrant-mcp
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret