# Dockerfile for Workspace Qdrant Daemon (Integration Testing)
# Builds the memexd Rust daemon for file watching and ingestion

FROM rust:1.75-slim-bullseye AS builder

LABEL stage=builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    ca-certificates \
    protobuf-compiler \
    && rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /build

# Copy Rust workspace
COPY src/rust/daemon /build/daemon

# Build the daemon in release mode
WORKDIR /build/daemon
RUN cargo build --release --bin memexd

# Create minimal runtime image
FROM debian:bullseye-slim

LABEL maintainer="christian.berclaz@mac.com" \
      description="Workspace Qdrant Daemon - File Watching and Ingestion"

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl1.1 \
    sqlite3 \
    curl \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd --system --gid 65534 daemon \
    && useradd --system --uid 65534 --gid 65534 --create-home --shell /bin/bash daemon

# Create application directories
RUN mkdir -p /app/data /app/logs \
    && chown -R daemon:daemon /app

# Copy daemon binary from builder
COPY --from=builder --chown=root:root /build/daemon/target/release/memexd /usr/local/bin/memexd
RUN chmod +x /usr/local/bin/memexd

# Set up environment
ENV RUST_LOG=info \
    RUST_BACKTRACE=1 \
    SQLITE_PATH=/app/data/state.db \
    LOG_DIR=/app/logs

# Switch to daemon user
USER daemon

WORKDIR /app

# Health check
HEALTHCHECK --interval=10s --timeout=5s --start-period=15s --retries=3 \
    CMD pgrep -x memexd || exit 1

# Run daemon with foreground flag and debug logging
CMD ["memexd", "--foreground", "--log-level", "debug"]
