[tool:pytest]
# Functional testing specific configuration
minversion = 7.0
testpaths = ["functional"]
pythonpath = ["..", "../.."]
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --tb=short
    --color=yes
    --durations=10
    --maxfail=5

# Functional testing markers
markers =
    # Framework-specific markers
    playwright: Playwright web UI functional tests
    testcontainers: Tests using testcontainers for service isolation
    api_testing: API functionality and MCP protocol tests
    benchmark: Performance baseline and regression tests

    # Environment markers
    local_only: Tests that require local environment
    docker_required: Tests requiring Docker runtime
    network_required: Tests requiring network connectivity
    slow_functional: Long-running functional tests (>60s)

    # Integration scope markers
    qdrant_integration: Tests requiring Qdrant server
    rust_integration: Tests requiring Rust daemon components
    mcp_protocol: MCP protocol compliance tests

    # Test categories
    smoke: Smoke tests for basic functionality validation
    regression: Regression tests for critical bug fixes
    end_to_end: Full workflow end-to-end tests

# Timeout configuration
timeout = 300
timeout_method = thread

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Coverage configuration for functional tests
addopts = --cov=src/python --cov-append --cov-report=term-missing:skip-covered

# Filtering configuration
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:testcontainers
    ignore::ResourceWarning
    error::FutureWarning

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution order
addopts = --order-dependencies --order-group-scope=module