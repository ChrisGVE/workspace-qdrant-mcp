[38;2;127;132;156m   1[0m [38;2;205;214;244mTask 358.2: Implement Type-Specific Deletion Handling in Queue Processor[0m
[38;2;127;132;156m   2[0m 
[38;2;127;132;156m   3[0m [38;2;205;214;244mANALYSIS:[0m
[38;2;127;132;156m   4[0m [38;2;205;214;244m=========[0m
[38;2;127;132;156m   5[0m 
[38;2;127;132;156m   6[0m [38;2;205;214;244mCurrent State:[0m
[38;2;127;132;156m   7[0m [38;2;205;214;244m- Python has collection_type_config.py defining 4 collection types (SYSTEM, LIBRARY, PROJECT, GLOBAL)[0m
[38;2;127;132;156m   8[0m [38;2;205;214;244m- DYNAMIC mode (PROJECT, GLOBAL): immediate deletion[0m
[38;2;127;132;156m   9[0m [38;2;205;214;244m- CUMULATIVE mode (SYSTEM, LIBRARY): mark deleted + batch cleanup[0m
[38;2;127;132;156m  10[0m [38;2;205;214;244m- Rust has basic delete operation in execute_delete() but no type awareness[0m
[38;2;127;132;156m  11[0m [38;2;205;214;244m- Collection name is available in QueueItem.collection_name[0m
[38;2;127;132;156m  12[0m 
[38;2;127;132;156m  13[0m [38;2;205;214;244mKey Issues Identified:[0m
[38;2;127;132;156m  14[0m [38;2;205;214;244m1. Python's CollectionType enum uses different names than Rust's CollectionType[0m
[38;2;127;132;156m  15[0m [38;2;205;214;244m   - Python: SYSTEM, LIBRARY, PROJECT, GLOBAL  [0m
[38;2;127;132;156m  16[0m [38;2;205;214;244m   - Rust: NonWatched, WatchedDynamic, WatchedCumulative, Project[0m
[38;2;127;132;156m  17[0m [38;2;205;214;244m   [0m
[38;2;127;132;156m  18[0m [38;2;205;214;244m2. Need to map collection names to types, not use existing Rust enum[0m
[38;2;127;132;156m  19[0m [38;2;205;214;244m   - System collections: start with "__" (SYSTEM type)[0m
[38;2;127;132;156m  20[0m [38;2;205;214;244m   - Library collections: start with "_" (LIBRARY type)  [0m
[38;2;127;132;156m  21[0m [38;2;205;214;244m   - Project collections: {project_id}-{suffix} (PROJECT type)[0m
[38;2;127;132;156m  22[0m [38;2;205;214;244m   - Global collections: fixed names (GLOBAL type)[0m
[38;2;127;132;156m  23[0m 
[38;2;127;132;156m  24[0m [38;2;205;214;244m3. No gRPC method exists yet to query collection type from Python[0m
[38;2;127;132;156m  25[0m 
[38;2;127;132;156m  26[0m [38;2;205;214;244mImplementation Plan:[0m
[38;2;127;132;156m  27[0m [38;2;205;214;244m====================[0m
[38;2;127;132;156m  28[0m 
[38;2;127;132;156m  29[0m [38;2;205;214;244mStep 1: Create deletion_strategy.rs module[0m
[38;2;127;132;156m  30[0m [38;2;205;214;244m-------------------------------------------[0m
[38;2;127;132;156m  31[0m [38;2;205;214;244m- Define DeletionMode enum (Dynamic, Cumulative)[0m
[38;2;127;132;156m  32[0m [38;2;205;214;244m- Define DeletionStrategy trait with execute method[0m
[38;2;127;132;156m  33[0m [38;2;205;214;244m- Implement DynamicDeletionStrategy (immediate Qdrant deletion)[0m
[38;2;127;132;156m  34[0m [38;2;205;214;244m- Implement CumulativeDeletionStrategy (mark deleted + schedule cleanup)[0m
[38;2;127;132;156m  35[0m [38;2;205;214;244m- Add factory to detect collection type from name pattern[0m
[38;2;127;132;156m  36[0m [38;2;205;214;244m- Use storage_client for Qdrant operations[0m
[38;2;127;132;156m  37[0m 
[38;2;127;132;156m  38[0m [38;2;205;214;244mStep 2: Update proto file for collection type query[0m
[38;2;127;132;156m  39[0m [38;2;205;214;244m----------------------------------------------------[0m
[38;2;127;132;156m  40[0m [38;2;205;214;244m- Add GetCollectionType RPC to IngestService[0m
[38;2;127;132;156m  41[0m [38;2;205;214;244m- Request: collection name[0m
[38;2;127;132;156m  42[0m [38;2;205;214;244m- Response: deletion mode (dynamic/cumulative) + collection type[0m
[38;2;127;132;156m  43[0m 
[38;2;127;132;156m  44[0m [38;2;205;214;244mStep 3: Extend queue_processor.rs execute_delete()[0m
[38;2;127;132;156m  45[0m [38;2;205;214;244m---------------------------------------------------[0m
[38;2;127;132;156m  46[0m [38;2;205;214;244m- Query collection type via gRPC call to Python[0m
[38;2;127;132;156m  47[0m [38;2;205;214;244m- Select appropriate deletion strategy based on response[0m
[38;2;127;132;156m  48[0m [38;2;205;214;244m- Execute deletion with proper error handling[0m
[38;2;127;132;156m  49[0m [38;2;205;214;244m- Update metrics to track deletion modes[0m
[38;2;127;132;156m  50[0m 
[38;2;127;132;156m  51[0m [38;2;205;214;244mStep 4: Add batch cleanup scheduler[0m
[38;2;127;132;156m  52[0m [38;2;205;214;244m------------------------------------[0m
[38;2;127;132;156m  53[0m [38;2;205;214;244m- Background task running periodically (e.g., every hour)[0m
[38;2;127;132;156m  54[0m [38;2;205;214;244m- Query items marked for cumulative deletion[0m
[38;2;127;132;156m  55[0m [38;2;205;214;244m- Batch delete from Qdrant[0m
[38;2;127;132;156m  56[0m [38;2;205;214;244m- Update queue status[0m
[38;2;127;132;156m  57[0m [38;2;205;214;244m- Add to QueueProcessor struct[0m
[38;2;127;132;156m  58[0m 
[38;2;127;132;156m  59[0m [38;2;205;214;244mStep 5: Update metrics[0m
[38;2;127;132;156m  60[0m [38;2;205;214;244m----------------------[0m
[38;2;127;132;156m  61[0m [38;2;205;214;244m- Track dynamic vs cumulative deletions separately[0m
[38;2;127;132;156m  62[0m [38;2;205;214;244m- Monitor batch cleanup performance[0m
[38;2;127;132;156m  63[0m [38;2;205;214;244m- Add deletion mode to queue metrics[0m
[38;2;127;132;156m  64[0m 
[38;2;127;132;156m  65[0m [38;2;205;214;244mSIMPLIFIED APPROACH:[0m
[38;2;127;132;156m  66[0m [38;2;205;214;244m===================[0m
[38;2;127;132;156m  67[0m [38;2;205;214;244mSince Python already has the logic, we can:[0m
[38;2;127;132;156m  68[0m [38;2;205;214;244m1. Detect type from collection name pattern in Rust (no gRPC needed initially)[0m
[38;2;127;132;156m  69[0m [38;2;205;214;244m2. Implement deletion strategies[0m
[38;2;127;132;156m  70[0m [38;2;205;214;244m3. Use strategies in execute_delete[0m
[38;2;127;132;156m  71[0m [38;2;205;214;244m4. Add batch cleanup for cumulative deletions[0m
[38;2;127;132;156m  72[0m 
[38;2;127;132;156m  73[0m [38;2;205;214;244mThis avoids adding gRPC complexity and follows the existing pattern detection in Python.[0m
